{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/dockerで立ち上げたwebサーバでmod_rewriteしたかった話/","result":{"data":{"site":{"siteMetadata":{"title":"magcho's blog","author":"magcho"}},"markdownRemark":{"id":"b4fa6ab2-fc16-555c-8df4-d0dc0b360e53","excerpt":"内容 DockerHub の公式の PHP イメージを使っていて、mod_rewite したい人向けのお話です。結論だけ知りたい人は読み飛ばしてね。 事の発端 僕自身が立ち上げた web サービスではもともと URL…","html":"<h2>内容</h2>\n<p>DockerHub の公式の PHP イメージを使っていて、mod_rewite したい人向けのお話です。結論だけ知りたい人は読み飛ばしてね。</p>\n<h2>事の発端</h2>\n<p>僕自身が立ち上げた web サービスではもともと URL が<code class=\"language-text\">http://example.com/index.php?cmd=view&amp;page=123</code>という感じでとてもダサかったので、かっこよくしたかった。WordPress などではパーマリンクと呼ばれ URL がイカした感じになっているので、僕も方法をパクった。\n調べると apache 側の設定で mod_rewrite を使うとアクセス時に URL を記述したルールに基づいて置換してくれるらしい。</p>\n<p>僕の web サービスではアクセスを全て index.php で受け、get パラメータで動作を変化させている、pukiwiki とか？の設計をパクったはず。動作ルールは以下</p>\n<p><code class=\"language-text\">example.com/index.php?cmd=[動作モード]&amp;page=[記事のNo.]</code></p>\n<ul>\n<li>cmd\n<ul>\n<li>view 記事の表示、page で記事を指定</li>\n<li>edit 記事の編集、page で記事を指定</li>\n<li>category カテゴリーごとに記事一覧を表示する　　などなど</li>\n</ul>\n</li>\n</ul>\n<p>これを<code class=\"language-text\">example.com/[動作モード]/[記事のNo.]</code>にしたかった。\nさらに view の時には<code class=\"language-text\">example.com/[記事のNo.]</code>にしたい。</p>\n<p>このルールで URL を置換させるには.htaccess に</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>.htaccess</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RewriteEngine On\nRewriteBase /\nRewriteRule ^([0-9]+) index.php?cmd=view&amp;page=$1 [L]\nRewriteRule ^edit/([0-9]+) index.php?cmd=edit&amp;page=$1 [L]\nRewriteRule ^edit index.php?cmd=edit [L]\nRewriteRule ^category index.php?cmd=category [L]</code></pre></div>\n<p>のように記述する、よくある正規表現と似ているので特に迷うことはないだろう。</p>\n<p>いざ、Docker で立てた開発環境に置いてみると、500 エラー。なんで！！\nしばらく悩むも解決せず、諦めて本番環境に置いてみると動いた！なんで！！</p>\n<p>理由は単純だった、使っているシステムが違った。どちらも apache なのは違いないが、本番は CentOS で構成されており、開発環境の Docker の公式 image の php は debian で構成されていた。</p>\n<p><a href=\"https://github.com/docker-library/php/blob/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/apache/Dockerfile\">Dockerfile</a></p>\n<p>debian 系の apache で mod_rewrite を有効化するにはコンテナに入ってコマンドを打てばいいらしい。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker exec -it {php_container_name} bash\n$ a2enmod rewrite</code></pre></div>\n<p>そして/etc/apache2/sites-available/000-default.conf の&#x3C;VirtualHost *:80>の中に</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    &lt;Directory /var/www/html>\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory></code></pre></div>\n<p>を追加して再起動すれば OK!</p>\n<p>でも、せっかく docker-compose 使ってるからいちいちコマンド打つの面倒だよね。ってことで</p>\n<h2>結論</h2>\n<p><strong>Dockerfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FROM php:7.0-apache\nRUN  a2enmod rewrite</code></pre></div>\n<p><strong>docker-compse.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">php-7.0</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'80:80'</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'../:/var/www/html'</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'./000-default.conf:/etc/apache2/sites-available/000-default.conf'</span></code></pre></div>\n<p><strong>000-default.conf</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;VirtualHost *:80>\n    &lt;Directory /var/www/html>\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory>\n~~~~~~~~~~~~~~以下略~~~~~~~~~~~~~~~~</code></pre></div>\n<p>この３ファイルを同じディレクトリに入れ<code class=\"language-text\">docker-compose build</code>なりでイメージをリビルドして<code class=\"language-text\">docker-compose up</code>でOK。</p>\n<p>ちなみに、mysql も使いたいよって人は</p>\n<p><strong>Dockerfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FROM php:7.0-apache\nRUN apt-get update &amp;&amp; \\\n  docker-php-ext-install pdo_mysql mysqli mbstring &amp;&amp; \\\n  a2enmod rewrite</code></pre></div>\n<p>こうすれば良いです。</p>","fileAbsolutePath":"/home/runner/work/blog.magcho.com/blog.magcho.com/src/pages/dockerで立ち上げたwebサーバでmod_rewriteしたかった話.md","frontmatter":{"title":"Dockerで立ち上げたwebサーバでmod_rewriteしたかった話","tags":["Docker"],"category":"プログラミング","fullDate":"2017-08-11"},"fields":{"lastFileUpdatedAt":"2022-09-21","fileRevisionCount":"1"}},"allMarkdownRemark":{"group":[{"fieldValue":"3D_printer"},{"fieldValue":"AWS"},{"fieldValue":"Apple Watch"},{"fieldValue":"Arduino"},{"fieldValue":"Art-Net"},{"fieldValue":"Chrome"},{"fieldValue":"DMX512"},{"fieldValue":"Docker"},{"fieldValue":"GitHub Actions"},{"fieldValue":"Gulp"},{"fieldValue":"Homebrew"},{"fieldValue":"Jest"},{"fieldValue":"M5Paper"},{"fieldValue":"Netlify"},{"fieldValue":"Nginx"},{"fieldValue":"OLA"},{"fieldValue":"OSS"},{"fieldValue":"SOAP"},{"fieldValue":"TypeScript"},{"fieldValue":"dotz"},{"fieldValue":"emacs"},{"fieldValue":"gatsby.js"},{"fieldValue":"git"},{"fieldValue":"github"},{"fieldValue":"go"},{"fieldValue":"golang"},{"fieldValue":"homebrew"},{"fieldValue":"lily58"},{"fieldValue":"mac"},{"fieldValue":"macOS"},{"fieldValue":"qmk firmware"},{"fieldValue":"tmux"},{"fieldValue":"use-package"},{"fieldValue":"youtube live"},{"fieldValue":"インターンシップ"},{"fieldValue":"ブログ"},{"fieldValue":"ポリッドスクリーン"},{"fieldValue":"参加レポ"},{"fieldValue":"思ったこと"},{"fieldValue":"生産性のない話"},{"fieldValue":"自作キーボード"},{"fieldValue":"読書"}]}},"pageContext":{"slug":"/dockerで立ち上げたwebサーバでmod_rewriteしたかった話/","previous":{"excerpt":"イベント概要 非営利 自分も含め、企画側は全員学生、お客さんは学生と教員 イベントを行った場所は学校 使用キャラクターはクリプトンヒューチャー社の VOCALOID キャラクターのみ 準備 スクリーンについて スクリーンを選ぶポイント 安い 短辺が２メートル以上あるロール状のシート 無地 (フィルム表面に何も印字されていない) 学生でも買える 軽い 学校に搬入可能である を考え、今回利用したのがカインズホームの農ポリ 0.05X210X100 5000 円以下で購入でき、サイズも短辺が 2m10cm あり支払いもコンビニで OK、完全に無地で、ロールの状態で 9kg…","fields":{"slug":"/ポリッドスクリーンを使ったボカロ系イベントを作った話/"},"frontmatter":{"date":"08/04","title":"ポリッドスクリーンを使ったボカロ系イベントを作った話","category":"舞台技術","tags":["ポリッドスクリーン"]}},"next":{"excerpt":"買ったやつ http://amzn.asia/b5Kk31r インストールしたドライバー http://www.wch.cn/download/CH341SER_MAC_ZIP.html","fields":{"slug":"/arduino互換品のドライバーメモ/"},"frontmatter":{"date":"08/16","title":"Arduino互換品のドライバーメモ","category":"電子工作","tags":["Arduino"]}}}},"staticQueryHashes":["1324386404","4172131656","848935343"]}