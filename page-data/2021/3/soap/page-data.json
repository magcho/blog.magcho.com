{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/2021/3/soap/","result":{"data":{"site":{"siteMetadata":{"title":"magcho's blog","author":"magcho"}},"markdownRemark":{"id":"dc6e284c-0376-566c-8270-72861e1dc6c1","excerpt":"今日においてWEB APIといえばREST or GraphQLといったところですが、他にもいろいろな方式が考案され普及し衰退していったようです。そんな中でも衰退した方のSOAPのAPIを使うことになったけど日本語情報が少なくて困ったので覚書です。 SOAPはRPC…","html":"<p>今日においてWEB APIといえばREST or GraphQLといったところですが、他にもいろいろな方式が考案され普及し衰退していったようです。そんな中でも衰退した方のSOAPのAPIを使うことになったけど日本語情報が少なくて困ったので覚書です。</p>\n<p>SOAPはRPCの一種でネットワーク越しに何らかの関数を呼ぶような感覚で使えました。SOAPはRESTとは違い１つのエンドポイントに対して所定のXMLにて引数を組み立てPOSTなどで送ることで利用できます。</p>\n<p>この所定のXMLですがプロトコル上人間が組み立てるのではなくライブラリが自動でXMLを生成してやり取りすることを想定しているようです。なのでライブラリにこの定義を読み込ませるためのスキーマーとしてWSDLというものがあります、中身はXML形式でリクエストやレスポンスの形式が定義されておりAPIを提供しているサービス側から提供されています。（自分で作るものではなさそう）</p>\n<p>これはApache Axisの仕様によるものですが、WDSLがAPI提供側のドキュメントになくても<code class=\"language-text\">https://{endpoint}?wsdl</code>にアクセスすると取得できる場合があります。</p>\n<p>コーディングに入る前に、そもそもこのAPIが現存しているのかも確認したいので<a href=\"https://www.soapui.org/\">SoapUI</a>を用いて試すと良さそうです。</p>\n<h2>リクエスト</h2>\n<p>リクエストに情報を持たせる方法として２種類ありHTTPのheaderを用いるもの（protocol binding haeder）とbodyのSOAP message（SOAP Envelope）で送る方法があります。このどちらにもheaderという概念がありますがこれらは区別しなければならないようです。</p>\n<h2>SOAP message</h2>\n<p>呼び出す際のHTTPにXMLで呼び出したい内容を入れてリクエストすることで利用できます、フォーマットはWSDLから読み解くことができます。基本のフォーマットは</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">&lt;http://schemas.xmlsoap.org/soap/envelope/envelope>\n    &lt;http://schemas.xmlsoap.org/soap/envelope/envelope/header>\n        ...\n    &lt;/http://schemas.xmlsoap.org/soap/envelope/envelope/header>\n    &lt;http://schemas.xmlsoap.org/soap/envelope/envelope/body>\n        ...\n    &lt;/http://schemas.xmlsoap.org/soap/envelope/envelope/body>\n&lt;/http://schemas.xmlsoap.org/soap/envelope/envelope></code></pre></div>\n<p>ですがさすがに冗長なのでXMLのnamespaceという仕様により<code class=\"language-text\">xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"</code>と宣言することで以下のように<code class=\"language-text\">ENV</code>などの任意の文字列をエイリアスとして利用するケースが多いようです。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">ENV:</span>Envelope</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>ENV</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/soap/envelope/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">ENV:</span>Body</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">ENV:</span>Body</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">ENV:</span>Envelope</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>※<code class=\"language-text\">&lt;Header>~~&lt;/Header></code>は中身がなければ省略可能です。</p>\n<h2>cURLでSOAP APIを叩く</h2>\n<p>前提知識が多くRESTに比べると使いづらい印象ですが、RESTにくらべた利点としてSOAPはステートフルであることが挙げられるそうです。そのためセッションを自分で管理しながらAPIを叩くのは面倒なのでそういった場合はライブラリを利用したほうがいいですが、１回情報を問い合わせるぐらいであればライブラリを使わずにやりたいものです。</p>\n<p>呼び出すAPIのドキュメントに書いてあると思いますがhttpヘッダーには以下のものを設定しておきます</p>\n<table>\n<thead>\n<tr>\n<th>header</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content-Type</td>\n<td>application/soap+xml;charset=UTF-8</td>\n</tr>\n<tr>\n<td>Accept-Charset</td>\n<td>utf-8</td>\n</tr>\n<tr>\n<td>SOAPAction</td>\n<td>{呼び出すサービス名}</td>\n</tr>\n</tbody>\n</table>\n<p>そしてSOAP messageをxmlファイルとして保存し</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- message.xml --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soapenv:</span>Envelope</span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsd</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span> \n  <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>soapenv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/soap/envelope/<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>req</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com/req/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soapenv:</span>Header</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soapenv:</span>Body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">req:</span>zipcode</span><span class=\"token punctuation\">></span></span>\n            100-0001\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">req:</span>zipcode</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soapenv:</span>Body</span><span class=\"token punctuation\">></span></span>      \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soapenv:</span>Envelope</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>curlで呼び出します</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://endpoint.example.com/ <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Content-Type: application/soap+xml;charset=UTF-8'</span> <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'Accept-Charset: utf-8'</span> <span class=\"token punctuation\">\\</span>\n  -H <span class=\"token string\">'SOAPAction: zipcode'</span> <span class=\"token punctuation\">\\</span>\n  -d @message.xml</code></pre></div>\n<p>このような形でライブラリを利用しなくてもSOAPのAPIが叩けます。各種言語のcurlの記述に合わせて似たようなことをすればRESTのように気軽に利用できるのではないでしょうか？</p>","fileAbsolutePath":"/home/runner/work/blog.magcho.com/blog.magcho.com/src/pages/2021/3/soap.md","frontmatter":{"title":"SOAP APIを使ったメモ","tags":["SOAP"],"category":"プログラミング","fullDate":"2021-03-20"},"fields":{"lastFileUpdatedAt":"2022-09-17","fileRevisionCount":"1"}},"allMarkdownRemark":{"group":[{"fieldValue":"3D_printer"},{"fieldValue":"AWS"},{"fieldValue":"Apple Watch"},{"fieldValue":"Arduino"},{"fieldValue":"Art-Net"},{"fieldValue":"Chrome"},{"fieldValue":"DMX512"},{"fieldValue":"Docker"},{"fieldValue":"GitHub Actions"},{"fieldValue":"Gulp"},{"fieldValue":"Homebrew"},{"fieldValue":"Jest"},{"fieldValue":"M5Paper"},{"fieldValue":"Netlify"},{"fieldValue":"Nginx"},{"fieldValue":"OLA"},{"fieldValue":"OSS"},{"fieldValue":"SOAP"},{"fieldValue":"TypeScript"},{"fieldValue":"dotz"},{"fieldValue":"emacs"},{"fieldValue":"gatsby.js"},{"fieldValue":"git"},{"fieldValue":"github"},{"fieldValue":"go"},{"fieldValue":"golang"},{"fieldValue":"homebrew"},{"fieldValue":"lily58"},{"fieldValue":"mac"},{"fieldValue":"macOS"},{"fieldValue":"qmk firmware"},{"fieldValue":"tmux"},{"fieldValue":"use-package"},{"fieldValue":"youtube live"},{"fieldValue":"インターンシップ"},{"fieldValue":"ブログ"},{"fieldValue":"ポリッドスクリーン"},{"fieldValue":"参加レポ"},{"fieldValue":"思ったこと"},{"fieldValue":"生産性のない話"},{"fieldValue":"自作キーボード"},{"fieldValue":"読書"}]}},"pageContext":{"slug":"/2021/3/soap/","previous":{"excerpt":"2021年3月にGatsby.jsのv3がリリースされました、多少の破壊的な変更はあるもののv1からv2の時ほどの苦労はなくアップデートできた気がします。 いくつか進化がありますが、一番にビルド速度が一段と早くなった気がします。HotReloadが特に早くなりエディタからブラウザに画面を切り替えるとすでにリロードされており待ち時間が無くなっているように感じます、すごい。さらにはブラウザ上にエラーメッセージがモーダルでしっかり表示されるようになりました。これで開発も一段と楽になった気がします。また、いよいよincremental buildが正式に使えるようになりました。deployにかかる時間が大幅に短縮されるのではないでしょうか。 v2からv3への更新にあたっていくつかの破壊的な更新があるため多少修正しないとビルドが通りませんでした。内容は公式のマイグレーションガイドに従えばOK…","fields":{"slug":"/2021/3/gatsby-v3/"},"frontmatter":{"date":"03/14","title":"Gatsby.jsをv3に更新した","category":"プログラミング","tags":["gatsby.js"]}},"next":{"excerpt":"バッテリー残量を確認したい ついこないだやっとBig Surにアップデートをしました。アップデートしてから気がついたんですがBig Surはメニューバーにバッテリー残量の数値を出せなくなっていました。 アイコンの満ち欠けでなんとなくの残量はわかりますし、マウスでクリックすれば数値を確認することはできるのですが常時表示されていないとなんとなく不安です。 そこで以前利用していたBattery Monitorを入れてバッテリー残量が20%を下回ったら通知バナーを出すように設定していました。しかし最近導入した大きめのディスプレイで作業していると右上の通知バナーに気がつかず、「いきなり画面が消えた！」と思って本体の画面を見たら赤い電池マークが点滅していることが何度もあり、どうにかしたかった。 Cloud Batteryで出来ること 探すとCloud Battery…","fields":{"slug":"/2021/4/cloudbattery/"},"frontmatter":{"date":"04/11","title":"Cloud Batteryでバッテリー残量を確認する","category":"日記","tags":["mac"]}}}},"staticQueryHashes":["1324386404","4172131656","848935343"]}