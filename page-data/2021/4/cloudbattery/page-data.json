{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/2021/4/cloudbattery/","result":{"data":{"site":{"siteMetadata":{"title":"magcho's blog","author":"magcho"}},"markdownRemark":{"id":"09391e34-8322-52a0-ae95-72291a05c76b","excerpt":"バッテリー残量を確認したい ついこないだやっとBig Surにアップデートをしました。アップデートしてから気がついたんですがBig Sur…","html":"<h2>バッテリー残量を確認したい</h2>\n<p>ついこないだやっとBig Surにアップデートをしました。アップデートしてから気がついたんですがBig Surはメニューバーにバッテリー残量の数値を出せなくなっていました。</p>\n<p>アイコンの満ち欠けでなんとなくの残量はわかりますし、マウスでクリックすれば数値を確認することはできるのですが常時表示されていないとなんとなく不安です。</p>\n<p>そこで以前利用していた<a href=\"https://apps.apple.com/jp/app/battery-monitor-health-info/id836505650\">Battery Monitor</a>を入れてバッテリー残量が20%を下回ったら通知バナーを出すように設定していました。しかし最近導入した大きめのディスプレイで作業していると右上の通知バナーに気がつかず、「いきなり画面が消えた！」と思って本体の画面を見たら赤い電池マークが点滅していることが何度もあり、どうにかしたかった。</p>\n<h2>Cloud Batteryで出来ること</h2>\n<p>探すと<a href=\"https://apps.apple.com/jp/app/cloud-battery/id1481005137\">Cloud Battery</a>というアプリを見つけました、これは単一のiCloudアカウントでログインしているデバイスに入れておけば全てのデバイスのバッテリー残量をiCloud越しに共有し、さらには通知もできるという素晴らしいアプリです。</p>\n<p>数多くのデバイスに対応し、自分の手持ちではmac, iPhone, iPad, Apple pencil, Apple Watch, MagicTrackpad 2のバッテリー情報を共有できました。AppStoreのスクリーンショットを見る限りAppleデバイスではなくても登録できるっぽいんですが手持ちのBluetoothイヤホンは登録できませんでした、残念。</p>\n<p>※追記LogicoolのERGO M575も対応していました。BluetoothイヤホンはIOSデバイスにペアリングしている時のみ対応していました。</p>\n<p>さらに、デバイス間で残量を共有しているのでmacのバッテリーが20%を下回ったときにApple WatchやiPhoneでpush通知を受け取ることができます。通知は指定値を下回ったら通知されるものに加え指定値を超えたときに通知することもできます。なので通常はApple Watchの充電完了通知はペアリングしているiPhoneしか通知が届きませんがこの機能により全てのデバイスでpush通知がきます。iPadで動画見てても気がつけるのはうれしい</p>\n<h2>Cloud Batteryを使う上で</h2>\n<p>とっても便利なCloud Batteryですが気にかけなければならない点がいくつかあります。</p>\n<p>１つ目はBluetoothを用いること。iosアプリで利用するときにbluetoothを切っていると、OS側からオンにしませんか？みたいなポップアップが出ます。オンにしておけば問題ないのですが、自分が使っているワイヤレスイヤホンが同時２つまでしかペアリングできないので、利用していない端末のBluetoothの新規接続をOFFにしているのでよくこのポップアップが出ますがそれ以外に実害はないので今のところ問題なさそう。</p>\n<p>２つ目はiCloud同期のタイミングがマチマチなところ。バッテリー残量が20%になったとの通知を受けとったのでmacを充電しようと思って見たら残り３％ぐらいになってて焦ったりします。同期はリアルタイムではない様子。１０分ぐらい遅れているな〜と思う時もあればほぼリアルタイムな時もありマチマチなので通知設定をするときは余裕を持っておいた方が良さそう。</p>\n<p>３つ目はmac版のアプリがよく落ちること。mac版は他のプラットフォームと違い常時起動させておく必要があります。なのでmacの設定からスタートアップに設定しています。macの起動と同時に必ずCloud Batteryも起動しているのですが、何時間か作業をしているといつの間にか落ちていることが何度かありました。AppStoreのレビューには動作が不安定というコメントがないのでおま環かもしれませんがこれは不便。なので自分が行った解決策も書いておきます。</p>\n<h2>Cloud Batteryを常時起動させたい</h2>\n<p>自分の手元でmac版のCloud Batteryがいつの間にか落ちていることがあるので、自動起動 and 落ちていたら自動的に起動するように設定しました。</p>\n<p>よくある<code class=\"language-text\">systemctl</code>を用いたデーモン化というやつなのですが、macには<code class=\"language-text\">systemctl</code>はなく、同様の機能を持った<code class=\"language-text\">launchctl</code>を用いて設定するようです。</p>\n<p>詳しいことは<code class=\"language-text\">man</code>コマンドから読めます</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">man</span> launchd\n$ <span class=\"token function\">man</span> launchctl\n$ <span class=\"token function\">man</span> launchd.plist</code></pre></div>\n<p><code class=\"language-text\">~/Library/LaunchAgents/</code>ディレクトリに以下のplistを作り</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>/Users/{user_name}/Library/LaunchAgents/hoge.fuga.plist</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">plist</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"token string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plist</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>KeepAlive<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>Label<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>hoge.fuga.cloudbattery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>ProgramArguments<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>array</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/Applications/Cloud Battery.app/Contents/MacOS/Cloud Battery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>array</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>RunAtLoad<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>StartInterval<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>integer</span><span class=\"token punctuation\">></span></span>300<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>integer</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>StandardErrorPath<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/dev/null<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>StandardOutPath<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/dev/null<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plist</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ launchctl load ~/Library/LaunchAgents/com.hoge.fuga.plist</code></pre></div>\n<p>すれば設定完了です、コマンドを打ってすぐにアプリが起動しメニューバーに表示されます。あとは５分おきに起動を確認して、落ちていたら再起動し起動していたら何もしない挙動になります。</p>\n<p>これで快適なバッテリー管理が出来る！</p>\n<h2>plistメモ</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">name</th>\n<th align=\"left\">value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">KeepAlive</td>\n<td align=\"left\">cronのように定期実行なら<code class=\"language-text\">true</code> 常時起動なら<code class=\"language-text\">false</code></td>\n</tr>\n<tr>\n<td align=\"left\">Label</td>\n<td align=\"left\">識別名なので被らなければなんでも良い</td>\n</tr>\n<tr>\n<td align=\"left\">ProgramArguments</td>\n<td align=\"left\">起動したいバイナリを指定、<code class=\"language-text\">〇〇.app</code>はディレクトリなのでその中のバイナリーを指すようにする</td>\n</tr>\n<tr>\n<td align=\"left\">RunAtLoad</td>\n<td align=\"left\">スタートアップに登録するなら<code class=\"language-text\">true</code></td>\n</tr>\n<tr>\n<td align=\"left\">StartInterval</td>\n<td align=\"left\">単位は秒</td>\n</tr>\n</tbody>\n</table>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://www.alanyan.ca/CloudBattery/\">https://www.alanyan.ca/CloudBattery/</a></li>\n<li><a href=\"https://news.mynavi.jp/article/20071211-iul01/resources/Leopard_launchd_newkeywords.pdf\">https://news.mynavi.jp/article/20071211-iul01/resources/Leopard_launchd_newkeywords.pdf</a></li>\n<li><a href=\"https://qiita.com/rsahara/items/7d37a4cb6c73329d4683\">https://qiita.com/rsahara/items/7d37a4cb6c73329d4683</a></li>\n</ul>","fileAbsolutePath":"/home/runner/work/blog.magcho.com/blog.magcho.com/src/pages/2021/4/cloudbattery.md","frontmatter":{"title":"Cloud Batteryでバッテリー残量を確認する","tags":["mac"],"category":"日記","fullDate":"2021-04-11"},"fields":{"lastFileUpdatedAt":"2022-09-17","fileRevisionCount":"1"}},"allMarkdownRemark":{"group":[{"fieldValue":"3D_printer"},{"fieldValue":"AWS"},{"fieldValue":"Apple Watch"},{"fieldValue":"Arduino"},{"fieldValue":"Art-Net"},{"fieldValue":"Chrome"},{"fieldValue":"DMX512"},{"fieldValue":"Docker"},{"fieldValue":"GitHub Actions"},{"fieldValue":"Gulp"},{"fieldValue":"Homebrew"},{"fieldValue":"M5Paper"},{"fieldValue":"Netlify"},{"fieldValue":"Nginx"},{"fieldValue":"OLA"},{"fieldValue":"OSS"},{"fieldValue":"SOAP"},{"fieldValue":"TypeScript"},{"fieldValue":"dotz"},{"fieldValue":"emacs"},{"fieldValue":"gatsby.js"},{"fieldValue":"git"},{"fieldValue":"github"},{"fieldValue":"go"},{"fieldValue":"golang"},{"fieldValue":"homebrew"},{"fieldValue":"lily58"},{"fieldValue":"mac"},{"fieldValue":"macOS"},{"fieldValue":"qmk firmware"},{"fieldValue":"tmux"},{"fieldValue":"use-package"},{"fieldValue":"youtube live"},{"fieldValue":"インターンシップ"},{"fieldValue":"ブログ"},{"fieldValue":"ポリッドスクリーン"},{"fieldValue":"参加レポ"},{"fieldValue":"思ったこと"},{"fieldValue":"生産性のない話"},{"fieldValue":"自作キーボード"},{"fieldValue":"読書"}]}},"pageContext":{"slug":"/2021/4/cloudbattery/","previous":{"excerpt":"今日においてWEB APIといえばREST or GraphQLといったところですが、他にもいろいろな方式が考案され普及し衰退していったようです。そんな中でも衰退した方のSOAPのAPIを使うことになったけど日本語情報が少なくて困ったので覚書です。 SOAPはRPCの一種でネットワーク越しに何らかの関数を呼ぶような感覚で使えました。SOAPはRESTとは違い１つのエンドポイントに対して所定のXMLにて引数を組み立てPOSTなどで送ることで利用できます。 この所定のXMLですがプロトコル上人間が組み立てるのではなくライブラリが自動でXMLを生成してやり取りすることを想定しているようです。なのでライブラリにこの定義を読み込ませるためのスキーマーとしてWSDLというものがあります、中身はXML形式でリクエストやレスポンスの形式が定義されておりAPI…","fields":{"slug":"/2021/3/soap/"},"frontmatter":{"date":"03/20","title":"SOAP APIを使ったメモ","category":"プログラミング","tags":["SOAP"]}},"next":{"excerpt":"JWTを用いたAPIリクエストをするSPAをReactで作っていた中で、全てのAxiosのリクエストのヘッダーにJWTを付与してさらにレスポンスに型をつけたかった。 SPAからバックエンドサーバーに通信する際のリクエストヘッダーにを付与したく、さらにはJWTの有効期限が切れている場合は勝手にJWTを更新した上でリクエストをする仕組みが欲しかった。 axiosのレスポンスに型をつける Axiosの型定義を見るとといった形でレスポンスの型情報に型パラメータが使える。 しかし、Axiosは非同期的に使うと思うのでの返り値はですが、以下のような型定義なので同じとみなせます。 ということは、以下のようなコードがかけます。 のレスポンスが以下の型である時 リクエストするAxiosのコードは Bearerヘッダーを付与・JWTの有効期限も考慮する axiosのインスタンスを作り、そこにBearer…","fields":{"slug":"/2021/6/axios/"},"frontmatter":{"date":"06/11","title":"AxiosにJWTつけてレスポンスに型もつけたい","category":"プログラミング","tags":["TypeScript"]}}}},"staticQueryHashes":["1324386404","4172131656","848935343"]}