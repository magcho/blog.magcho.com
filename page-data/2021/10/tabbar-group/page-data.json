{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/2021/10/tabbar-group/","result":{"data":{"site":{"siteMetadata":{"title":"magcho's blog","author":"magcho"}},"markdownRemark":{"id":"2a49bc09-1c91-58df-9e8c-1455ef6966fa","excerpt":"EmacsにTabを追加するパッケージであるtabbar.elを使っています。このパッケージはBuffer名をエディタ上部に並べてくれる機能を提供します。 tabbar.elには標準でmajor modeごとにタブグループを作る機能があります、このグルーピングをproject…","html":"<p>EmacsにTabを追加するパッケージであるtabbar.elを使っています。このパッケージはBuffer名をエディタ上部に並べてくれる機能を提供します。</p>\n<p>tabbar.elには標準でmajor modeごとにタブグループを作る機能があります、このグルーピングをproject名(.gitディレクトリが入っているディレクトリ名)ごとにまとめてVSCodeのマルチウィンドウのように扱いたかったので以下のようにして解決しました。</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>init.el</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"elisp\"><pre class=\"language-elisp\"><code class=\"language-elisp\"><span class=\"token punctuation\">(</span><span class=\"token car\">leaf</span> tabbar\n  <span class=\"token lisp-property property\">:url</span> <span class=\"token string\">\"https://github.com/dholm/tabbar\"</span>\n  <span class=\"token lisp-property property\">:ensure</span> <span class=\"token boolean\">t</span>\n  <span class=\"token lisp-property property\">:defun</span> <span class=\"token punctuation\">(</span><span class=\"token car\">my/tabbar-buffer-groups</span>\n          projectile-project-name\n          projectile-project-root<span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:custom</span> <span class=\"token punctuation\">(</span><span class=\"token car\">tabbar-buffer-groups-function</span> <span class=\"token punctuation\">.</span> <span class=\"token quoted-symbol variable symbol\">'my/tabbar-buffer-groups</span><span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:global-minor-mode</span> <span class=\"token boolean\">t</span>\n  <span class=\"token lisp-property property\">:custom-face</span>\n  <span class=\"token lisp-property property\">:init</span>\n  <span class=\"token punctuation\">(</span><span class=\"token defun\"><span class=\"token keyword\">defun</span> <span class=\"token function\">my/tabbar-buffer-groups</span> <span class=\"token punctuation\">(</span><span class=\"token arguments\"></span><span class=\"token punctuation\">)</span></span>\n    <span class=\"token punctuation\">(</span><span class=\"token car\">list</span>\n     <span class=\"token punctuation\">(</span><span class=\"token keyword\">cond</span>\n      <span class=\"token comment\">;; check project name by projectile.el</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token car\">projectile-project-name</span> <span class=\"token punctuation\">(</span><span class=\"token car\">projectile-project-root</span> <span class=\"token punctuation\">(</span><span class=\"token car\">buffer-file-name</span> <span class=\"token punctuation\">(</span><span class=\"token car\">current-buffer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">;; fallback default name</span>\n      <span class=\"token punctuation\">(</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>projectile.elに依存しているので別途設定が必要です。</p>","fileAbsolutePath":"/home/runner/work/blog.magcho.com/blog.magcho.com/src/pages/2021/10/tabbar-group.md","frontmatter":{"title":"Emacsのtabbar-modeをProjectごとに切り替える","tags":["emacs"],"category":"プログラミング","fullDate":"2021-10-19"},"fields":{"lastFileUpdatedAt":"2022-09-17","fileRevisionCount":"1"}},"allMarkdownRemark":{"group":[{"fieldValue":"3D_printer"},{"fieldValue":"AWS"},{"fieldValue":"Apple Watch"},{"fieldValue":"Arduino"},{"fieldValue":"Art-Net"},{"fieldValue":"Chrome"},{"fieldValue":"DMX512"},{"fieldValue":"Docker"},{"fieldValue":"GitHub Actions"},{"fieldValue":"Gulp"},{"fieldValue":"Homebrew"},{"fieldValue":"M5Paper"},{"fieldValue":"Netlify"},{"fieldValue":"Nginx"},{"fieldValue":"OLA"},{"fieldValue":"OSS"},{"fieldValue":"SOAP"},{"fieldValue":"TypeScript"},{"fieldValue":"dotz"},{"fieldValue":"emacs"},{"fieldValue":"gatsby.js"},{"fieldValue":"git"},{"fieldValue":"github"},{"fieldValue":"go"},{"fieldValue":"golang"},{"fieldValue":"homebrew"},{"fieldValue":"lily58"},{"fieldValue":"mac"},{"fieldValue":"macOS"},{"fieldValue":"qmk firmware"},{"fieldValue":"tmux"},{"fieldValue":"use-package"},{"fieldValue":"youtube live"},{"fieldValue":"インターンシップ"},{"fieldValue":"ブログ"},{"fieldValue":"ポリッドスクリーン"},{"fieldValue":"参加レポ"},{"fieldValue":"思ったこと"},{"fieldValue":"生産性のない話"},{"fieldValue":"自作キーボード"},{"fieldValue":"読書"}]}},"pageContext":{"slug":"/2021/10/tabbar-group/","previous":{"excerpt":"初めに GitHub Actionsには2000分/月の無料枠がありますがビジュアルテストなど時間がかかりそうなテストをたくさん回そうとすると足りなくなることがあります。GitHubが提供しているSelf hosted runnerのエージェントを自前で用意したマシンに入れることで代わりの実行環境として利用できます。 VM Oracle cloudのARMマシンが余っていたのでこのマシンたちを利用して構築しました。セルフホストランナーをサポートするアーキテクチャとオペレーティングシステムに記載されているようにLinuxであればARMでも利用できます。 インストール Jenkinsのようにマシンにエージェントをインストールしてから設定するのかと思いきや、まず最初に設定するリポジトリ/Organizationの設定画面からnew self-hosted runner…","fields":{"slug":"/2021/10/github_actions_selfhosted/"},"frontmatter":{"date":"10/18","title":"GitHub Actionsのセルフホストランナーを試す","category":"プログラミング","tags":["github"]}},"next":{"excerpt":"先日Intel mac向けにemacs-ngをビルドする記事を書きました。しばらく使ってみましたが深刻な問題が起こることもなく常用できそうだったのでM1 mac向けにもビルドして普段使いしたいと思った次第です。 ビルド手順 ビルドに必要な依存関係をドキュメントに従ってインストールします。https://emacs-ng.github.io/emacs-ng/build/building/ 以下のコマンドでビルドします。 今回はとを有効化します。jsonの方はをbrewでインストールし、configure時にオプションを渡してあげればOKです。 native compilationの方は、現状コンパイラがlibgccjit…","fields":{"slug":"/2021/12/m1-emacsng/"},"frontmatter":{"date":"12/11","title":"M1 macでemacs-ngをビルドする","category":"プログラミング","tags":["emacs"]}}}},"staticQueryHashes":["1324386404","4172131656","848935343"]}