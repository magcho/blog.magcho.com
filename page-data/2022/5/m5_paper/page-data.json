{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/2022/5/m5_paper/","result":{"data":{"site":{"siteMetadata":{"title":"magcho's blog","author":"magcho"}},"markdownRemark":{"id":"de0aa3c7-1115-5650-8b8f-1200cf503d41","excerpt":"M5Paperの出荷時に書き込まれているファームウェアーをベースに機能を追加してみようと思い初期ファームウェアをvscode(platform.io)で開いたもののビルドできない&書き込めなくて困ったので解決方法をメモ 環境 MacOS Monterey…","html":"<p><a href=\"https://switch-science.com/catalog/7359/\">M5Paper</a>の出荷時に書き込まれているファームウェアーをベースに機能を追加してみようと思い<a href=\"https://github.com/m5stack/M5Paper_FactoryTest\">初期ファームウェア</a>をvscode(platform.io)で開いたもののビルドできない&#x26;書き込めなくて困ったので解決方法をメモ</p>\n<h2>環境</h2>\n<ul>\n<li>MacOS Monterey</li>\n</ul>\n<h2>ビルドエラー</h2>\n<p>初期ファームウェアのコード <a href=\"https://github.com/m5stack/M5Paper_FactoryTest\">m5stack/M5Paper_FactoryTest</a>  をクローンし、vscodeで開いた後、ビルドをするとエラーで完了しない。</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Building in release mode\nCompiling <span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>build<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_factorytest<span class=\"token punctuation\">.</span>cpp<span class=\"token punctuation\">.</span>o\n<span class=\"token property\">src/frame/frame_factorytest.cpp:</span> In member function <span class=\"token string\">'bool Frame_FactoryTest::checkGrove(int, int)'</span><span class=\"token operator\">:</span>\nsrc<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_factorytest<span class=\"token punctuation\">.</span>cpp<span class=\"token operator\">:</span><span class=\"token number\">180</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token operator\">:</span> error<span class=\"token operator\">:</span> call of overloaded <span class=\"token string\">'begin(int&amp;, int&amp;, int)'</span> is ambiguous\n     Wire1<span class=\"token punctuation\">.</span>begin<span class=\"token operator\">(</span>sda<span class=\"token punctuation\">,</span> scl<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token operator\">)</span><span class=\"token operator\">;</span>\n                                <span class=\"token operator\">^</span>\nIn file included from <span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>libdeps<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>M5EPD<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>M5EPD<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n                 from src<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_base<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n                 from src<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_factorytest<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n                 from src<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_factorytest<span class=\"token punctuation\">.</span>cpp<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>\n<span class=\"token file-path string\">/Users/magcho/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src/Wire.h</span><span class=\"token operator\">:</span><span class=\"token number\">79</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span> note<span class=\"token operator\">:</span> candidate<span class=\"token operator\">:</span> <span class=\"token string\">'bool TwoWire::begin(int, int, uint32_t)'</span>\n     bool begin<span class=\"token operator\">(</span>int sda<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> int scl<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> uint32_t frequency<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">)</span><span class=\"token operator\">;</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> returns <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> if successful init of i2c bus\n          <span class=\"token operator\">^</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n<span class=\"token file-path string\">/Users/magcho/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src/Wire.h</span><span class=\"token operator\">:</span><span class=\"token number\">80</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span> note<span class=\"token operator\">:</span> candidate<span class=\"token operator\">:</span> <span class=\"token string\">'bool TwoWire::begin(uint8_t, int, int, uint32_t)'</span>\n     bool begin<span class=\"token operator\">(</span>uint8_t slaveAddr<span class=\"token punctuation\">,</span> int sda<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> int scl<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> uint32_t frequency<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">)</span><span class=\"token operator\">;</span>\n          <span class=\"token operator\">^</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n<span class=\"token separator comment\">***</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>build<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>frame<span class=\"token operator\">/</span>frame_factorytest<span class=\"token punctuation\">.</span>cpp<span class=\"token punctuation\">.</span>o<span class=\"token punctuation\">]</span> Error <span class=\"token number\">1</span>\n<span class=\"token separator comment\">===============================================================================</span> <span class=\"token punctuation\">[</span>FAILED<span class=\"token punctuation\">]</span> Took <span class=\"token number\">4.85</span> seconds <span class=\"token separator comment\">===============================================================================</span>\nThe terminal process <span class=\"token string\">\"platformio 'run', '--environment', 'm5stack-fire'\"</span> <span class=\"token property\">terminated with exit code:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>おそらくこのコードが書かれた以後、i2cのライブラリのインターフェースが変更されたっぽいので今の状態に合わせてキャストしておく</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>frame_factorytest.cpp</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff-cpp\"><code class=\"language-diff-cpp\"><span class=\"token unchanged language-cpp\"><span class=\"token prefix unchanged\"> </span><span class=\"token keyword\">bool</span> <span class=\"token class-name\">Frame_FactoryTest</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">checkGrove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scl<span class=\"token punctuation\">)</span>\n<span class=\"token prefix unchanged\"> </span><span class=\"token punctuation\">{</span>\n</span><span class=\"token deleted-sign deleted language-cpp\"><span class=\"token prefix deleted\">-</span>    Wire1<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>sda<span class=\"token punctuation\">,</span> scl<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token inserted-sign inserted language-cpp\"><span class=\"token prefix inserted\">+</span>    Wire1<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>sda<span class=\"token punctuation\">,</span> scl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint32_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token unchanged language-cpp\"><span class=\"token prefix unchanged\"> </span>    <span class=\"token keyword\">bool</span> groveCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</span></code></pre></div>\n<p>これでビルドが通る。</p>\n<h2>書き込み</h2>\n<p>めでたくビルドができたのでデバイスに書き込もうとするとエラー</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Building in release mode\nRetrieving maximum program size <span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>build<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>firmware<span class=\"token punctuation\">.</span>elf\nChecking size <span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>build<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>firmware<span class=\"token punctuation\">.</span>elf\nAdvanced Memory Usage is available via <span class=\"token string\">\"PlatformIO Home > Project Inspect\"</span>\n<span class=\"token property\">RAM:</span>   <span class=\"token punctuation\">[</span>          <span class=\"token punctuation\">]</span>   <span class=\"token number\">1.0</span><span class=\"token operator\">%</span> <span class=\"token operator\">(</span>used <span class=\"token number\">45440</span> bytes from <span class=\"token number\">4521984</span> bytes<span class=\"token operator\">)</span>\n<span class=\"token property\">Flash:</span> <span class=\"token punctuation\">[</span><span class=\"token separator comment\">===</span>       <span class=\"token punctuation\">]</span>  <span class=\"token number\">32.8</span><span class=\"token operator\">%</span> <span class=\"token operator\">(</span>used <span class=\"token number\">2151237</span> bytes from <span class=\"token number\">6553600</span> bytes<span class=\"token operator\">)</span>\nConfiguring upload protocol<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">AVAILABLE:</span> cmsis<span class=\"token operator\">-</span>dap<span class=\"token punctuation\">,</span> esp<span class=\"token operator\">-</span>prog<span class=\"token punctuation\">,</span> espota<span class=\"token punctuation\">,</span> esptool<span class=\"token punctuation\">,</span> iot<span class=\"token operator\">-</span>bus<span class=\"token operator\">-</span>jtag<span class=\"token punctuation\">,</span> jlink<span class=\"token punctuation\">,</span> minimodule<span class=\"token punctuation\">,</span> olimex<span class=\"token operator\">-</span>arm<span class=\"token operator\">-</span>usb<span class=\"token operator\">-</span>ocd<span class=\"token punctuation\">,</span> olimex<span class=\"token operator\">-</span>arm<span class=\"token operator\">-</span>usb<span class=\"token operator\">-</span>ocd<span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> olimex<span class=\"token operator\">-</span>arm<span class=\"token operator\">-</span>usb<span class=\"token operator\">-</span>tiny<span class=\"token operator\">-</span>h<span class=\"token punctuation\">,</span> olimex<span class=\"token operator\">-</span>jtag<span class=\"token operator\">-</span>tiny<span class=\"token punctuation\">,</span> tumpa\n<span class=\"token property\">CURRENT:</span> upload_protocol <span class=\"token operator\">=</span> esptool\nLooking for upload port<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Auto-detected:</span> <span class=\"token file-path string\">/dev/cu.usbmodem52D20507581</span>\nUploading <span class=\"token punctuation\">.</span>pio<span class=\"token operator\">/</span>build<span class=\"token operator\">/</span>m5stack<span class=\"token operator\">-</span>fire<span class=\"token operator\">/</span>firmware<span class=\"token punctuation\">.</span>bin\n<span class=\"token domain constant\">esptool.py</span> <span class=\"token number\">v3.3</span>\nSerial port <span class=\"token file-path string\">/dev/cu.usbmodem52D20507581</span>\nConnecting<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nChip is ESP32<span class=\"token operator\">-</span>D0WDQ6<span class=\"token operator\">-</span><span class=\"token number\">V3</span> <span class=\"token operator\">(</span>revision <span class=\"token number\">3</span><span class=\"token operator\">)</span>\n<span class=\"token property\">Features:</span> WiFi<span class=\"token punctuation\">,</span> BT<span class=\"token punctuation\">,</span> Dual Core<span class=\"token punctuation\">,</span> <span class=\"token number\">240MHz</span><span class=\"token punctuation\">,</span> VRef calibration in efuse<span class=\"token punctuation\">,</span> Coding Scheme None\nCrystal is <span class=\"token number\">40MHz</span>\n<span class=\"token property\">MAC:</span> <span class=\"token mac-address constant\">08:3a:f2:66:ca:84</span>\nUploading stub<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token property\">A fatal error occurred:</span> <span class=\"token property\">Failed to write to target RAM (result was 01070000:</span> Operation timed out<span class=\"token operator\">)</span>\n<span class=\"token separator comment\">***</span> <span class=\"token punctuation\">[</span>upload<span class=\"token punctuation\">]</span> Error <span class=\"token number\">2</span>\n<span class=\"token separator comment\">===============================================================================</span> <span class=\"token punctuation\">[</span>FAILED<span class=\"token punctuation\">]</span> Took <span class=\"token number\">6.51</span> seconds <span class=\"token separator comment\">===============================================================================</span>\nThe terminal process <span class=\"token string\">\"platformio 'run', '--target', 'upload', '--environment', 'm5stack-fire'\"</span> <span class=\"token property\">terminated with exit code:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>最初はデバイスドライバーの不足を疑い<a href=\"https://docs.m5stack.com/en/core/m5paper\">公式ページ</a>からデバイスドライバーをインストールした。ドライバーは２種類あるが不安ならどっちもインストールせよと書いてあるのでどっちもインストールするも症状変わらず。</p>\n<p>ここでデバイス一覧を眺めるとM5Paperから<code class=\"language-text\">usbmodemXXXXXX</code>と<code class=\"language-text\">wchusbserialXXXXXX</code>の２種類のシリアルポートが生えてることに気がついた</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">ls</span> /dev <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> usb <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token function\">tty</span>\ntty.usbmodem52D20507581\ntty.wchusbserial52D20507581</code></pre></div>\n<p>先ほどのエラーログを見る限り<code class=\"language-text\">/dev/cu.usbmodemXXXXXXX</code>を使おうとしてコケているので設定から<code class=\"language-text\">/dev/wchusbserialXXXXXX</code>を使うように指定してみる</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>platformio.ini</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\">  <span class=\"token comment\">; PlatformIO Project Configuration File</span>\n  <span class=\"token comment\">;</span>\n  <span class=\"token comment\">;   Build options: build flags, source filter</span>\n  <span class=\"token comment\">;   Upload options: custom upload port, speed and extra flags</span>\n  <span class=\"token comment\">;   Library options: dependencies, extra library storages</span>\n  <span class=\"token comment\">;   Advanced options: extra scripting</span>\n  <span class=\"token comment\">;</span>\n  <span class=\"token comment\">; Please visit documentation for the other options and examples</span>\n  <span class=\"token comment\">; https://docs.platformio.org/page/projectconf.html</span>\n\n  <span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">env:m5stack-fire</span><span class=\"token punctuation\">]</span></span>\n  <span class=\"token key attr-name\">platform</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">espressif32</span>\n  <span class=\"token key attr-name\">board</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">m5stack-fire</span>\n  <span class=\"token key attr-name\">framework</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">arduino</span>\n  <span class=\"token key attr-name\">upload_speed</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">2000000</span>\n  <span class=\"token key attr-name\">monitor_speed</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">115200</span>\n  <span class=\"token key attr-name\">board_build.partitions</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">default_16MB.csv</span>\n  <span class=\"token key attr-name\">build_flags</span> <span class=\"token punctuation\">=</span> \n \t<span class=\"token key attr-name\">-DCORE_DEBUG_LEVEL</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">4</span>\n \t-DBOARD_HAS_PSRAM\n \t-mfix-esp32-psram-cache-issue\n  <span class=\"token key attr-name\">lib_deps</span> <span class=\"token punctuation\">=</span>\n     m5stack/M5EPD\n<span class=\"token key attr-name\">+ upload_port</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/dev/cu.wchusbserialXXXXXXXXXXXXX</span></code></pre></div>\n<p>これでuploadを押すと書き込めるようになった。</p>\n<h2>TODO</h2>\n<p>後でPR投げておくかな</p>","fileAbsolutePath":"/home/runner/work/blog.magcho.com/blog.magcho.com/src/pages/2022/5/m5_paper.md","frontmatter":{"title":"M5Paper V1.1にPlatform.ioから書き込みをする","tags":["M5Paper"],"category":"電子工作","fullDate":"2022-05-08"},"fields":{"lastFileUpdatedAt":"2022-09-17","fileRevisionCount":"1"}},"allMarkdownRemark":{"group":[{"fieldValue":"3D_printer"},{"fieldValue":"AWS"},{"fieldValue":"Apple Watch"},{"fieldValue":"Arduino"},{"fieldValue":"Art-Net"},{"fieldValue":"Chrome"},{"fieldValue":"DMX512"},{"fieldValue":"Docker"},{"fieldValue":"GitHub Actions"},{"fieldValue":"Gulp"},{"fieldValue":"Homebrew"},{"fieldValue":"Jest"},{"fieldValue":"M5Paper"},{"fieldValue":"Netlify"},{"fieldValue":"Nginx"},{"fieldValue":"OLA"},{"fieldValue":"OSS"},{"fieldValue":"SOAP"},{"fieldValue":"TypeScript"},{"fieldValue":"dotz"},{"fieldValue":"emacs"},{"fieldValue":"gatsby.js"},{"fieldValue":"git"},{"fieldValue":"github"},{"fieldValue":"go"},{"fieldValue":"golang"},{"fieldValue":"homebrew"},{"fieldValue":"lily58"},{"fieldValue":"mac"},{"fieldValue":"macOS"},{"fieldValue":"qmk firmware"},{"fieldValue":"tmux"},{"fieldValue":"use-package"},{"fieldValue":"youtube live"},{"fieldValue":"インターンシップ"},{"fieldValue":"ブログ"},{"fieldValue":"ポリッドスクリーン"},{"fieldValue":"参加レポ"},{"fieldValue":"思ったこと"},{"fieldValue":"生産性のない話"},{"fieldValue":"自作キーボード"},{"fieldValue":"読書"}]}},"pageContext":{"slug":"/2022/5/m5_paper/","previous":{"excerpt":"先日VoxelabのAquilaという3Dプリンターを購入しました。以前から欲しいな〜と思っていた3D printerを一人暮らしを始めたしいい機会だと思って購入してみました。3Dプリンター自体は初めてではなく、今まではfab施設の方に3D CADのデータを送って出力作業はお任せしていたので実際に自分で印刷するのは初でした。 Aquilaシリーズの一番廉価モデルで２万円のものなのであまり期待していなかったのですが、届いて組み立ててみるとかなりちゃんとしています。無骨なアルミフレームのフォルムにガラスプレートがついています。かっこいい 試しにDEMOでついているデータを出力してみました。パラメーターの調整なしでもかなり綺麗に出力できています、２万円のプリンターすごい  CAD ネット上にあるデータを印刷して遊んでいたのですが、そろそろ自分で作りたくなってきました。ちょうど3D printer…","fields":{"slug":"/2022/5/3d_printer/"},"frontmatter":{"date":"05/06","title":"3Dプリンターを買った","category":"日記","tags":["3D_printer"]}},"next":{"excerpt":"スタート当初はOpenAPIが存在せず、仕様を整理する目的で後からOpenAPIが追加されたプロジェクトがありました。OpenAPIの仕様を満たせているかは人力でレビューするのみでありスキーマを定義した旨味がないなーと思っていたので後からOpenAPIを追加した場合でも仕様を満たせていることを担保できる仕組みを整備しました。 SwaggerもといOpenAPIはAPIの定義ファイルから openapi-generator-cli などを利用して定義通りのリクエストであることを担保できます。しかしこの方法はプロジェクト立ち上げ時の既存コードがない状態ではいいですが、既存のコードがあるとこの自動生成コードに置き換える必要があり大変です。 既存コードではAxiosでリクエストを行いJestの単体テストを行う環境が整備されていたのでここに乗っかる形で自動テスト時にOpenAPI…","fields":{"slug":"/2022/9/openapi-validation-test/"},"frontmatter":{"date":"09/19","title":"既存プロジェクトに後からopenapiを追加してAxiosのリクエストをJestでテストしたい","category":"プログラミング","tags":["Jest"]}}}},"staticQueryHashes":["1324386404","4172131656","848935343"]}