{"version":3,"file":"component---src-templates-blog-post-jsx-057468a021f54f83006e.js","mappings":"+OAYA,EAVmB,SAAC,GAAkB,IAE9BA,EAAS,wDAFoB,EAAfC,SACaC,MAAM,oBAEvC,OACE,uBAAKC,UAAU,eACb,qBAAGC,KAAMJ,GAAT,aCGOK,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAOD,EAAKE,eACZC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAkBN,EAAKO,QAE7B,OACE,gCACE,6BAAWP,EAAKQ,YAAYH,MAA5B,MAAuCH,GACvC,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,gBAAC,IAAD,CAAKD,MAAOH,EAAWS,YAAaL,MAyC1C,EApCyB,SAAC,GAAqC,IAAnCP,EAAkC,EAAlCA,KAAMa,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpCb,EAAOD,EAAKE,eACZC,EAAYH,EAAKI,KAAKC,aAAaC,MAEnCS,EAAeD,EAAYE,SAAWF,EAAYE,SAASC,OAAOC,KAAO,KACzEC,EAAWL,EAAYM,KAAON,EAAYM,KAAKH,OAAOC,KAAO,KAEnE,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUV,UAAWA,EAAWY,aAAcA,EAAcI,SAAUA,GACtF,2BAASE,IAAKpB,EAAKqB,IACjB,uBAAKzB,UAAW,kBACd,uBAAKA,UAAW,SACd,gBAAC,IAAD,CAAW0B,SAAUtB,EAAKQ,YAAYc,UAAWtB,EAAKQ,YAAYH,SAGtE,uBAAKgB,GAAG,gBACN,2CACc,wBAAME,SAAUvB,EAAKQ,YAAYgB,UAAWxB,EAAKQ,YAAYgB,WAE3E,+CAEE,wBAAMD,SAAUvB,EAAKgB,OAAOS,mBACzBzB,EAAKgB,OAAOS,kBADf,eAC8CzB,EAAKgB,OAAOU,kBAD1D,OAMJ,gBAAC,IAAD,CAAMC,KAAM3B,EAAKQ,YAAYoB,MAAQ,GAAIN,SAAUtB,EAAKQ,YAAYc,UAAY,KAChF,uBAAK1B,UAAW,eAAgBiC,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QACxE,gBAAC,IAAD,CAAMJ,KAAM3B,EAAKQ,YAAYoB,MAAQ,GAAIN,SAAUtB,EAAKQ,YAAYc,UAAY,KAChF,gBAAC,EAAD,CAAY5B,SAAUM,EAAKgC","sources":["webpack://magcho's_blog/./src/components/githubLink.jsx","webpack://magcho's_blog/./src/templates/blog-post.jsx"],"sourcesContent":["import React from 'react'\n\nconst GithubLink = ({ filePath }) => {\n  const relatedFilePath = filePath.match(/\\/src\\/pages\\/.*/)\n  const githubUrl = `https://github.com/magcho/blog.magcho.com/edit/master${relatedFilePath}`\n  return (\n    <div className=\"github-link\">\n      <a href={githubUrl}>この記事の編集</a>\n    </div>\n  )\n}\n\nexport default GithubLink\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport '../templates/style.scss'\nimport Tags from '../components/tags'\nimport PostTitle from '../components/posttitle'\nimport Ogp from '../components/ogp'\nimport GithubLink from '../components/githubLink'\n\nexport const Head = ({ data }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const postDescription = post.excerpt\n\n  return (\n    <>\n      <title>{`${post.frontmatter.title} | ${siteTitle}`}</title>\n      <meta name=\"description\" content={postDescription} />\n      <Ogp title={siteTitle} description={postDescription} />\n    </>\n  )\n}\n\nconst BlogPostTemplate = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n\n  const previousPath = pageContext.previous ? pageContext.previous.fields.slug : null\n  const nextPath = pageContext.next ? pageContext.next.fields.slug : null\n\n  return (\n    <Layout location={location} siteTitle={siteTitle} previousPath={previousPath} nextPath={nextPath}>\n      <article key={post.id}>\n        <div className={'content-header'}>\n          <div className={'title'}>\n            <PostTitle category={post.frontmatter.category}>{post.frontmatter.title}</PostTitle>\n          </div>\n        </div>\n        <div id=\"article-meta\">\n          <span>\n            Created at: <time dateTime={post.frontmatter.fullDate}>{post.frontmatter.fullDate}</time>\n          </span>\n          <span>\n            Last updated at:\n            <time dateTime={post.fields.lastFileUpdatedAt}>\n              {post.fields.lastFileUpdatedAt} (Revision: {post.fields.fileRevisionCount})\n            </time>\n          </span>\n        </div>\n\n        <Tags list={post.frontmatter.tags || []} category={post.frontmatter.category || []} />\n        <div className={'content-body'} dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Tags list={post.frontmatter.tags || []} category={post.frontmatter.category || []} />\n        <GithubLink filePath={post.fileAbsolutePath} />\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fileAbsolutePath\n      frontmatter {\n        title\n        tags\n        category\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n      }\n      fields {\n        lastFileUpdatedAt(formatString: \"YYYY-MM-DD\")\n        fileRevisionCount\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n`\n"],"names":["githubUrl","filePath","match","className","href","Head","data","post","markdownRemark","siteTitle","site","siteMetadata","title","postDescription","excerpt","frontmatter","name","content","description","location","pageContext","previousPath","previous","fields","slug","nextPath","next","key","id","category","dateTime","fullDate","lastFileUpdatedAt","fileRevisionCount","list","tags","dangerouslySetInnerHTML","__html","html","fileAbsolutePath"],"sourceRoot":""}