{"version":3,"file":"component---src-templates-blog-post-jsx-c26b78433571f9455c87.js","mappings":"+NAYA,EAVmB,SAAC,GAAkB,IAE9BA,EAAS,wDAFoB,EAAfC,SACaC,MAAM,oBAEvC,OACE,uBAAKC,UAAU,eACb,qBAAGC,KAAMJ,GAAT,aCqDN,EAjDyB,SAAC,GAAqC,IAAnCK,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACnCC,EAAkBN,EAAKO,QAEvBC,EAAeT,EAAYU,SAAWV,EAAYU,SAASC,OAAOC,KAAO,KACzEC,EAAWb,EAAYc,KAAOd,EAAYc,KAAKH,OAAOC,KAAO,KAEnE,OACE,gBAAC,IAAD,CAAQb,SAAUA,EAAUI,UAAWA,EAAWM,aAAcA,EAAcI,SAAUA,GACtF,gBAACE,EAAA,EAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CACJ,CACEC,KAAM,cACNC,QAASb,IAGbD,MAAUL,EAAKoB,YAAYf,MAAtB,MAAiCH,IAExC,gBAAC,IAAD,CAAKG,MAAOH,EAAWmB,YAAaf,IAEpC,2BAASgB,IAAKtB,EAAKuB,IACjB,uBAAK5B,UAAW,kBACd,uBAAKA,UAAW,SACd,gBAAC,IAAD,CAAW6B,SAAUxB,EAAKoB,YAAYI,UAAWxB,EAAKoB,YAAYf,SAGtE,uBAAKkB,GAAG,gBACN,2CACc,wBAAME,SAAUzB,EAAKoB,YAAYM,UAAW1B,EAAKoB,YAAYM,WAE3E,+CAEE,wBAAMD,SAAUzB,EAAKU,OAAOiB,mBACzB3B,EAAKU,OAAOiB,kBADf,eAC8C3B,EAAKU,OAAOkB,kBAD1D,OAMJ,gBAAC,IAAD,CAAMC,KAAM7B,EAAKoB,YAAYU,MAAQ,GAAIN,SAAUxB,EAAKoB,YAAYI,UAAY,KAChF,uBAAK7B,UAAW,eAAgBoC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QACxE,gBAAC,IAAD,CAAMJ,KAAM7B,EAAKoB,YAAYU,MAAQ,GAAIN,SAAUxB,EAAKoB,YAAYI,UAAY,KAChF,gBAAC,EAAD,CAAY/B,SAAUO,EAAKkC","sources":["webpack://magcho's_blog/./src/components/githubLink.jsx","webpack://magcho's_blog/./src/templates/blog-post.jsx"],"sourcesContent":["import React from 'react'\n\nconst GithubLink = ({ filePath }) => {\n  const relatedFilePath = filePath.match(/\\/src\\/pages\\/.*/)\n  const githubUrl = `https://github.com/magcho/blog.magcho.com/edit/master${relatedFilePath}`\n  return (\n    <div className=\"github-link\">\n      <a href={githubUrl}>この記事の編集</a>\n    </div>\n  )\n}\n\nexport default GithubLink\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport '../templates/style.scss'\nimport Tags from '../components/tags'\nimport PostTitle from '../components/posttitle'\nimport Ogp from '../components/ogp'\nimport GithubLink from '../components/githubLink'\n\nconst BlogPostTemplate = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const postDescription = post.excerpt\n\n  const previousPath = pageContext.previous ? pageContext.previous.fields.slug : null\n  const nextPath = pageContext.next ? pageContext.next.fields.slug : null\n\n  return (\n    <Layout location={location} siteTitle={siteTitle} previousPath={previousPath} nextPath={nextPath}>\n      <Helmet\n        htmlAttributes={{ lang: 'ja' }}\n        meta={[\n          {\n            name: 'description',\n            content: postDescription,\n          },\n        ]}\n        title={`${post.frontmatter.title} | ${siteTitle}`}\n      />\n      <Ogp title={siteTitle} description={postDescription} />\n\n      <article key={post.id}>\n        <div className={'content-header'}>\n          <div className={'title'}>\n            <PostTitle category={post.frontmatter.category}>{post.frontmatter.title}</PostTitle>\n          </div>\n        </div>\n        <div id=\"article-meta\">\n          <span>\n            Created at: <time dateTime={post.frontmatter.fullDate}>{post.frontmatter.fullDate}</time>\n          </span>\n          <span>\n            Last updated at:\n            <time dateTime={post.fields.lastFileUpdatedAt}>\n              {post.fields.lastFileUpdatedAt} (Revision: {post.fields.fileRevisionCount})\n            </time>\n          </span>\n        </div>\n\n        <Tags list={post.frontmatter.tags || []} category={post.frontmatter.category || []} />\n        <div className={'content-body'} dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Tags list={post.frontmatter.tags || []} category={post.frontmatter.category || []} />\n        <GithubLink filePath={post.fileAbsolutePath} />\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fileAbsolutePath\n      frontmatter {\n        title\n        tags\n        category\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n      }\n      fields {\n        lastFileUpdatedAt(formatString: \"YYYY-MM-DD\")\n        fileRevisionCount\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n`\n"],"names":["githubUrl","filePath","match","className","href","data","location","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","postDescription","excerpt","previousPath","previous","fields","slug","nextPath","next","Helmet","htmlAttributes","lang","meta","name","content","frontmatter","description","key","id","category","dateTime","fullDate","lastFileUpdatedAt","fileRevisionCount","list","tags","dangerouslySetInnerHTML","__html","html","fileAbsolutePath"],"sourceRoot":""}