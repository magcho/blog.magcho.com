{"expireTime":9007200860071780000,"key":"transformer-remark-markdown-ast-efc7b7b3c5dc2c1b79f172bde4b5097b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjs-titlegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"自分は ","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":5,"offset":6},"indent":[]}},{"type":"link","title":null,"url":"https://yuchi-kbd.hatenablog.com/entry/2018/12/23/214342","children":[{"type":"text","value":"Lily58 Pro","position":{"start":{"line":3,"column":6,"offset":7},"end":{"line":3,"column":16,"offset":17},"indent":[]}}],"position":{"start":{"line":3,"column":5,"offset":6},"end":{"line":3,"column":75,"offset":76},"indent":[]}},{"type":"text","value":" という左右分割の自作キーボードを使っています。ErgoDoxよりは小さくCorneよりは大きいのでとても自分に合っています。","position":{"start":{"line":3,"column":75,"offset":76},"end":{"line":3,"column":138,"offset":139},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":138,"offset":139},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lily58のデフォルトFWにはRaise/Lower/Adjustの3レイヤーが定義されていますが、最近会計処理を多くやることになってテンキーが欲しくなったので追加しようと思います。Lily58にはオプションとしてOLEDがつきます、デフォルトでレイヤー名やキー入力の履歴を表示してくれる親切設計でした。","position":{"start":{"line":5,"column":1,"offset":141},"end":{"line":5,"column":154,"offset":294},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":141},"end":{"line":5,"column":154,"offset":294},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"keymap.cにテンキーレイヤーを追加する","position":{"start":{"line":7,"column":4,"offset":299},"end":{"line":7,"column":26,"offset":321},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":296},"end":{"line":7,"column":26,"offset":321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"レイヤー定義は","position":{"start":{"line":9,"column":1,"offset":323},"end":{"line":9,"column":8,"offset":330},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">keymap.c</code>","position":{"start":{"line":9,"column":8,"offset":330},"end":{"line":9,"column":18,"offset":340},"indent":[]}},{"type":"text","value":"に書き込みます。","position":{"start":{"line":9,"column":18,"offset":340},"end":{"line":9,"column":26,"offset":348},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":323},"end":{"line":9,"column":26,"offset":348},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"レイヤーの切り替え方は何通りかあります、デフォルトのRaise/Lowerは押している時だけレイヤーを切り替える方式です。そのレイヤーのキーを１つタイプするだけならば便利な方式ですが、テンキーレイヤー等では連続して数値を入力し続けたいことがほとんどなので今回は一回押したらレイヤーを切り替え、もう一度押すとレイヤーが戻るtoggle方式にしました。","position":{"start":{"line":11,"column":1,"offset":350},"end":{"line":11,"column":175,"offset":524},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":350},"end":{"line":11,"column":175,"offset":524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"まず、以下のようにNUMBERレイヤーを定義します。","position":{"start":{"line":14,"column":1,"offset":527},"end":{"line":14,"column":27,"offset":553},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":527},"end":{"line":14,"column":27,"offset":553},"indent":[]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymap.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">_QWERTY <span class=\"token number\">0</span></span></span>\n <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">_LOWER <span class=\"token number\">1</span></span></span>\n <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">_RAISE <span class=\"token number\">2</span></span></span>\n <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">_ADJUST <span class=\"token number\">3</span></span></span>\n<span class=\"token operator\">+</span>#define _NUMBER <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":554},"end":{"line":21,"column":4,"offset":670},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymap.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">\t<span class=\"token punctuation\">[</span>_ADJUST<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n\t\t<span class=\"token function\">LAYOUT</span><span class=\"token punctuation\">(</span>XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span>                   XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span>\\\n\t\tXXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span>                   XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span>\\\n\t\tXXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span>                   XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> RGB_TOG<span class=\"token punctuation\">,</span> RGB_HUI<span class=\"token punctuation\">,</span> RGB_SAI<span class=\"token punctuation\">,</span> RGB_VAI<span class=\"token punctuation\">,</span>\\\n\t\tXXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> XXXXXXX<span class=\"token punctuation\">,</span> RGB_MOD<span class=\"token punctuation\">,</span> RGB_HUD<span class=\"token punctuation\">,</span> RGB_SAD<span class=\"token punctuation\">,</span> RGB_VAD<span class=\"token punctuation\">,</span>\\\n\t\t_______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n\n<span class=\"token operator\">+</span><span class=\"token comment\">/* NUMBER\n+     * ,-----------------------------------------.                    ,-----------------------------------------.\n+     * |      |      |      |      |      |      |                    |      |      |      |      |      |      |\n+     * |------+------+------+------+------+------|                    |------+------+------+------+------+------|\n+     * |      |      |      |      |      |      |                    |      |   7  |   8  |   9  |BSPACE|      |\n+     * |------+------+------+------+------+------|                    |------+------+------+------+------+------|\n+     * |      |      |      |      |      |      |-------.    ,-------|   =  |   4  |   5  |   6  |   +  |      |\n+     * |------+------+------+------+------+------|       |    |NUMBER |------+------+------+------+------+------|\n+     * |      |      |      |      |      |      |-------|    |-------|   0  |   1  |   2  |   3  |   -  |      |\n+     * `-----------------------------------------/       /     \\      \\-----------------------------------------'\n+     *                   | LAlt | LGUI |LOWER | /Space  /       \\Enter \\  |RAISE |BackSP| RGUI |\n+     *                   |      |      |      |/       /         \\      \\ |      |      |      |\n+     *                   `----------------------------'           '------''--------------------'\n+\t\t */</span>\n<span class=\"token operator\">+</span>\t <span class=\"token punctuation\">[</span>_NUMBER<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n<span class=\"token operator\">+</span>\t\t <span class=\"token function\">LAYOUT</span><span class=\"token punctuation\">(</span>_______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>                   _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>\\\n<span class=\"token operator\">+</span>\t\t _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>                   KC_PDOT<span class=\"token punctuation\">,</span> KC_P7<span class=\"token punctuation\">,</span>   KC_P8<span class=\"token punctuation\">,</span>   KC_P9<span class=\"token punctuation\">,</span>   KC_BSPC<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>\\\n<span class=\"token operator\">+</span>\t\t _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>                   KC_PEQL<span class=\"token punctuation\">,</span> KC_P4<span class=\"token punctuation\">,</span>   KC_P5<span class=\"token punctuation\">,</span>    KC_P6<span class=\"token punctuation\">,</span>  KC_PPLS<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>\\\n<span class=\"token operator\">+</span>\t\t _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span> KC_P0<span class=\"token punctuation\">,</span>   KC_P1<span class=\"token punctuation\">,</span>   KC_P2<span class=\"token punctuation\">,</span>   KC_P3<span class=\"token punctuation\">,</span>   KC_PMNS<span class=\"token punctuation\">,</span> _______<span class=\"token punctuation\">,</span>\\\n<span class=\"token operator\">+</span>\t\t KC_LSFT<span class=\"token punctuation\">,</span> KC_LGUI<span class=\"token punctuation\">,</span> LOWER<span class=\"token punctuation\">,</span> KC_SPC<span class=\"token punctuation\">,</span> KC_ENT<span class=\"token punctuation\">,</span> RAISE<span class=\"token punctuation\">,</span> KC_RGUI<span class=\"token punctuation\">,</span> KC_RALT<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":23,"column":1,"offset":672},"end":{"line":53,"column":4,"offset":3274},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"NUMBERレイヤーへtoggleするためのキーをQWERTYレイヤーに定義します。右手側の一番左の１つだけ横に出ているキーに割り当てます。","position":{"start":{"line":56,"column":1,"offset":3277},"end":{"line":56,"column":71,"offset":3347},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":3277},"end":{"line":56,"column":71,"offset":3347},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">TG(レイヤー番号)</code>","position":{"start":{"line":58,"column":1,"offset":3349},"end":{"line":58,"column":13,"offset":3361},"indent":[]}},{"type":"text","value":"のように割り当て、切り替え先のレイヤーには","position":{"start":{"line":58,"column":13,"offset":3361},"end":{"line":58,"column":34,"offset":3382},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">KC_TRANSPARENT</code>","position":{"start":{"line":58,"column":34,"offset":3382},"end":{"line":58,"column":50,"offset":3398},"indent":[]}},{"type":"text","value":"かそのエイリアスである","position":{"start":{"line":58,"column":50,"offset":3398},"end":{"line":58,"column":61,"offset":3409},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">_______</code>","position":{"start":{"line":58,"column":61,"offset":3409},"end":{"line":58,"column":70,"offset":3418},"indent":[]}},{"type":"text","value":"を割り当ておきます。","position":{"start":{"line":58,"column":70,"offset":3418},"end":{"line":58,"column":80,"offset":3428},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":3349},"end":{"line":58,"column":80,"offset":3428},"indent":[]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymap.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">/* QWERTY\n\t * ,-----------------------------------------.                    ,-----------------------------------------.\n\t * |  `   |   1  |   2  |   3  |   4  |   5  |                    |   6  |   7  |   8  |   9  |   0  |BSPACE|\n\t * |------+------+------+------+------+------|                    |------+------+------+------+------+------|\n\t * | Tab  |   Q  |   W  |   E  |   R  |   T  |                    |   Y  |   U  |   I  |   O  |   P  |BSPACE|\n\t * |------+------+------+------+------+------|                    |------+------+------+------+------+------|\n\t * |LCTRL |   A  |   S  |   D  |   F  |   G  |-------.    ,-------|   H  |   J  |   K  |   L  |   ;  |  '   |\n\t * |------+------+------+------+------+------|CSLOCK |    |NUMBER |------+------+------+------+------+------|\n\t * | LAlt |   Z  |   X  |   C  |   V  |   B  |-------|    |-------|   N  |   M  |   ,  |   .  |   /  |RShift|\n\t * `-----------------------------------------/       /     \\      \\-----------------------------------------'\n\t *                   |Lshift| LGUI |LOWER | /Space  /       \\Enter \\  |RAISE | RGUI | RAlt |\n\t *                   |      |      |      |/       /         \\      \\ |      |      |      |\n\t *                   `----------------------------'           '------''--------------------'\n\t */</span>\n\n    <span class=\"token punctuation\">[</span>_QWERTY<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n\t<span class=\"token function\">LAYOUT</span><span class=\"token punctuation\">(</span>KC_GRV<span class=\"token punctuation\">,</span> KC_1<span class=\"token punctuation\">,</span> KC_2<span class=\"token punctuation\">,</span> KC_3<span class=\"token punctuation\">,</span> KC_4<span class=\"token punctuation\">,</span> KC_5<span class=\"token punctuation\">,</span> KC_6<span class=\"token punctuation\">,</span> KC_7<span class=\"token punctuation\">,</span> KC_8<span class=\"token punctuation\">,</span> KC_9<span class=\"token punctuation\">,</span> KC_0<span class=\"token punctuation\">,</span> SUSHI<span class=\"token punctuation\">,</span>\\\n\t\tKC_TAB<span class=\"token punctuation\">,</span> KC_Q<span class=\"token punctuation\">,</span> KC_W<span class=\"token punctuation\">,</span> KC_E<span class=\"token punctuation\">,</span> KC_R<span class=\"token punctuation\">,</span> KC_T<span class=\"token punctuation\">,</span> KC_Y<span class=\"token punctuation\">,</span> KC_U<span class=\"token punctuation\">,</span> KC_I<span class=\"token punctuation\">,</span> KC_O<span class=\"token punctuation\">,</span> KC_P<span class=\"token punctuation\">,</span> KC_MINS<span class=\"token punctuation\">,</span>\\\n\t\tKC_LCTRL<span class=\"token punctuation\">,</span> KC_A<span class=\"token punctuation\">,</span> KC_S<span class=\"token punctuation\">,</span> KC_D<span class=\"token punctuation\">,</span> KC_F<span class=\"token punctuation\">,</span> KC_G<span class=\"token punctuation\">,</span> KC_H<span class=\"token punctuation\">,</span> KC_J<span class=\"token punctuation\">,</span> KC_K<span class=\"token punctuation\">,</span> KC_L<span class=\"token punctuation\">,</span> KC_SCLN<span class=\"token punctuation\">,</span> KC_QUOT<span class=\"token punctuation\">,</span>\\\n\t\tKC_LALT<span class=\"token punctuation\">,</span> KC_Z<span class=\"token punctuation\">,</span> KC_X<span class=\"token punctuation\">,</span> KC_C<span class=\"token punctuation\">,</span> KC_V<span class=\"token punctuation\">,</span> KC_B<span class=\"token punctuation\">,</span> KC_CAPS<span class=\"token punctuation\">,</span> <span class=\"token function\">TG</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> KC_N<span class=\"token punctuation\">,</span> KC_M<span class=\"token punctuation\">,</span> KC_COMM<span class=\"token punctuation\">,</span> KC_DOT<span class=\"token punctuation\">,</span> KC_SLSH<span class=\"token punctuation\">,</span> KC_RSFT<span class=\"token punctuation\">,</span> \\\n\t\tKC_LSFT<span class=\"token punctuation\">,</span> KC_LGUI<span class=\"token punctuation\">,</span> LOWER<span class=\"token punctuation\">,</span> KC_SPC<span class=\"token punctuation\">,</span> KC_ENT<span class=\"token punctuation\">,</span> RAISE<span class=\"token punctuation\">,</span> KC_RGUI<span class=\"token punctuation\">,</span> KC_RALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>","position":{"start":{"line":60,"column":1,"offset":3430},"end":{"line":83,"column":4,"offset":5197},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"これでNUMBERレイヤーが動作します。","position":{"start":{"line":86,"column":1,"offset":5200},"end":{"line":86,"column":21,"offset":5220},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":5200},"end":{"line":86,"column":21,"offset":5220},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3層目のレイヤーを使う","position":{"start":{"line":88,"column":4,"offset":5225},"end":{"line":88,"column":15,"offset":5236},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":5222},"end":{"line":88,"column":15,"offset":5236},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.qmk.fm/#/feature_layers","children":[{"type":"text","value":"qmk firmwareのドキュメント","position":{"start":{"line":90,"column":2,"offset":5239},"end":{"line":90,"column":21,"offset":5258},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":5238},"end":{"line":90,"column":60,"offset":5297},"indent":[]}},{"type":"text","value":" にもありますがレイヤーは階層構造を持ち","position":{"start":{"line":90,"column":60,"offset":5297},"end":{"line":90,"column":80,"offset":5317},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">KC_TRANSPARENT</code>","position":{"start":{"line":90,"column":80,"offset":5317},"end":{"line":90,"column":96,"offset":5333},"indent":[]}},{"type":"text","value":"で下のレイヤーを透過的に利用できます。","position":{"start":{"line":90,"column":96,"offset":5333},"end":{"line":90,"column":115,"offset":5352},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":5238},"end":{"line":90,"column":115,"offset":5352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"自分はRaizeレイヤーに矢印キーを割り当てているのでNUMBERレイヤーの時にLOWERキーを押したらLOWERレイヤーに一時的に切り替わってくれると嬉しいです。\nつまり、QWERTY -> NUMBER -> LOWER とレイヤーを変化されているのでQWERTYから数えて3層目のレイヤーです。","position":{"start":{"line":92,"column":1,"offset":5354},"end":{"line":93,"column":68,"offset":5504},"indent":[1]}}],"position":{"start":{"line":92,"column":1,"offset":5354},"end":{"line":93,"column":68,"offset":5504},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Lily58ではQERTYレイヤ状態でLOWERキー押下時に","position":{"start":{"line":95,"column":1,"offset":5506},"end":{"line":95,"column":31,"offset":5536},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">layer_on(_LOWER)</code>","position":{"start":{"line":95,"column":31,"offset":5536},"end":{"line":95,"column":49,"offset":5554},"indent":[]}},{"type":"text","value":"でレイヤーを切り替えています。この関数の実装上今回のケースでは期待しない動作になります。\n今回はRaise/Lowerキーの押下/押上時に処理を追加して対応します。","position":{"start":{"line":95,"column":49,"offset":5554},"end":{"line":96,"column":38,"offset":5636},"indent":[1]}}],"position":{"start":{"line":95,"column":1,"offset":5506},"end":{"line":96,"column":38,"offset":5636},"indent":[1]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymap.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> bool prelayer_numberlayer <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n\nbool <span class=\"token function\">process_record_user</span><span class=\"token punctuation\">(</span>uint16_t keycode<span class=\"token punctuation\">,</span> keyrecord_t <span class=\"token operator\">*</span>record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> LOWER<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tis_prelayer_numberlayer <span class=\"token operator\">=</span> <span class=\"token function\">layer_state_is</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">layer_off</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">layer_on</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">update_tri_layer_RGB</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">,</span> _RAISE<span class=\"token punctuation\">,</span> _ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">layer_off</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">update_tri_layer_RGB</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">,</span> _RAISE<span class=\"token punctuation\">,</span> _ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is_prelayer_numberlayer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">layer_on</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token keyword\">case</span> RAISE<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tis_prelayer_numberlayer <span class=\"token operator\">=</span> <span class=\"token function\">layer_state_is</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">layer_off</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">layer_on</span><span class=\"token punctuation\">(</span>_RAISE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">update_tri_layer_RGB</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">,</span> _RAISE<span class=\"token punctuation\">,</span> _ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">layer_off</span><span class=\"token punctuation\">(</span>_RAISE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">update_tri_layer_RGB</span><span class=\"token punctuation\">(</span>_LOWER<span class=\"token punctuation\">,</span> _RAISE<span class=\"token punctuation\">,</span> _ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is_prelayer_numberlayer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">layer_on</span><span class=\"token punctuation\">(</span>_NUMBER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":5638},"end":{"line":136,"column":4,"offset":6691},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"以上の実装で3層目のレイヤーも期待する動作になります。","position":{"start":{"line":138,"column":1,"offset":6693},"end":{"line":138,"column":28,"offset":6720},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6693},"end":{"line":138,"column":28,"offset":6720},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"OLEDに表示されるレイヤー名を修正する","position":{"start":{"line":141,"column":4,"offset":6726},"end":{"line":141,"column":24,"offset":6746},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":6723},"end":{"line":141,"column":24,"offset":6746},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lily58のオプションで付けられるOLEDにはレイヤー名や入力履歴等が表示されています。OLED周りの実装はlibに入っています。ここに直接手を加えていきます。","position":{"start":{"line":143,"column":1,"offset":6748},"end":{"line":143,"column":82,"offset":6829},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":6748},"end":{"line":143,"column":82,"offset":6829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"レイヤー名の表示はkeymap.cの","position":{"start":{"line":145,"column":1,"offset":6831},"end":{"line":145,"column":19,"offset":6849},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">read_layer_state()</code>","position":{"start":{"line":145,"column":19,"offset":6849},"end":{"line":145,"column":39,"offset":6869},"indent":[]}},{"type":"text","value":"で呼び出されています。","position":{"start":{"line":145,"column":39,"offset":6869},"end":{"line":145,"column":50,"offset":6880},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":6831},"end":{"line":145,"column":50,"offset":6880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"この関数の実装にNUMBERレイヤーに関する記述をすると","position":{"start":{"line":147,"column":1,"offset":6882},"end":{"line":147,"column":29,"offset":6910},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":6882},"end":{"line":147,"column":29,"offset":6910},"indent":[]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>lib/layer_state_reader.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">L_BASE <span class=\"token number\">0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\"><span class=\"token function\">L_LOWER</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\"><span class=\"token function\">L_RAISE</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\"><span class=\"token function\">L_ADJUST</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\"><span class=\"token function\">L_ADJUST_TRI</span> <span class=\"token punctuation\">(</span>L_ADJUST <span class=\"token operator\">|</span> L_RAISE <span class=\"token operator\">|</span> L_LOWER<span class=\"token punctuation\">)</span></span></span>\n<span class=\"token operator\">+</span>#define <span class=\"token function\">L_NUMBER</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":149,"column":1,"offset":6912},"end":{"line":156,"column":4,"offset":7123},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>lib/layer_state_reader.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">read_layer_state</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>layer_state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">+</span>        <span class=\"token keyword\">case</span> L_NUMBER<span class=\"token operator\">:</span>\n<span class=\"token operator\">+</span>            <span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span>layer_state_str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>layer_state_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Layer: Number\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span>layer_state_str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>layer_state_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Layer: Undef-%ld\"</span><span class=\"token punctuation\">,</span> layer_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> layer_state_str<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":7125},"end":{"line":170,"column":4,"offset":7505},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"これでOLEDにLayer: Numberと表示されるようになります。めでたしめでたし。","position":{"start":{"line":171,"column":1,"offset":7506},"end":{"line":171,"column":45,"offset":7550},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":7506},"end":{"line":171,"column":45,"offset":7550},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"おまけ","position":{"start":{"line":173,"column":4,"offset":7555},"end":{"line":173,"column":7,"offset":7558},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":7552},"end":{"line":173,"column":7,"offset":7558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"qmkではレイヤーの状態を","position":{"start":{"line":175,"column":1,"offset":7560},"end":{"line":175,"column":14,"offset":7573},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unit32_t layer_state</code>","position":{"start":{"line":175,"column":14,"offset":7573},"end":{"line":175,"column":36,"offset":7595},"indent":[]}},{"type":"text","value":" で保持し、下位ビットから順にレイヤー1・レイヤー2を割り当ててそのビットが立っているかどうかを判定しているらしい。","position":{"start":{"line":175,"column":36,"offset":7595},"end":{"line":175,"column":94,"offset":7653},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":7560},"end":{"line":175,"column":94,"offset":7653},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">layer_on(LAYER)</code>","position":{"start":{"line":177,"column":1,"offset":7655},"end":{"line":177,"column":18,"offset":7672},"indent":[]}},{"type":"text","value":"は指定したビットを立てるわけではなく、現在の","position":{"start":{"line":177,"column":18,"offset":7672},"end":{"line":177,"column":40,"offset":7694},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">layer_state</code>","position":{"start":{"line":177,"column":40,"offset":7694},"end":{"line":177,"column":53,"offset":7707},"indent":[]}},{"type":"text","value":"を左に指定量ビットシフトしている。確かに","position":{"start":{"line":177,"column":53,"offset":7707},"end":{"line":177,"column":73,"offset":7727},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">keymap.c</code>","position":{"start":{"line":177,"column":73,"offset":7727},"end":{"line":177,"column":83,"offset":7737},"indent":[]}},{"type":"text","value":"で","position":{"start":{"line":177,"column":83,"offset":7737},"end":{"line":177,"column":84,"offset":7738},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">#define _NUMBER 4</code>","position":{"start":{"line":177,"column":84,"offset":7738},"end":{"line":177,"column":103,"offset":7757},"indent":[]}},{"type":"text","value":"を定義しましたね。当然","position":{"start":{"line":177,"column":103,"offset":7757},"end":{"line":177,"column":114,"offset":7768},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">layer_off(LAYER)</code>","position":{"start":{"line":177,"column":114,"offset":7768},"end":{"line":177,"column":132,"offset":7786},"indent":[]}},{"type":"text","value":"は右に指定量ビットシフトです。","position":{"start":{"line":177,"column":132,"offset":7786},"end":{"line":177,"column":147,"offset":7801},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":7655},"end":{"line":177,"column":147,"offset":7801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"今までLily58にFWを書き込む時には繋いでるTRRSを抜いて書き込んでいたのですが、軽く調べた感じ繋ぎっぱなしで書き込んで問題なさそう(私は設計者ではないので信憑性のない情報)\n","position":{"start":{"line":179,"column":1,"offset":7803},"end":{"line":180,"column":1,"offset":7894},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/kata0510/Lily58/tree/master/Pro/PCB","children":[{"type":"text","value":"回路図","position":{"start":{"line":180,"column":2,"offset":7895},"end":{"line":180,"column":5,"offset":7898},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7894},"end":{"line":180,"column":63,"offset":7956},"indent":[]}},{"type":"text","value":" を見た感じUSBの通信線とは別のピンでPro Micro同士を繋いでいます。TRRSのアサインは先端からUSBからのVCC/GND/通信線/NCっぽい。ProMicroの仕様書をざっと見た感じFW書き込み時にシリアルピンは影響なさそうなのでTRRSを抜かずに書き込めそうです。","position":{"start":{"line":180,"column":63,"offset":7956},"end":{"line":180,"column":202,"offset":8095},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":7803},"end":{"line":180,"column":202,"offset":8095},"indent":[1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":181,"column":1,"offset":8096}}}}