{"expireTime":9007200860071780000,"key":"transformer-remark-markdown-ast-509ce98d9c9539c87af8726b2d26874e-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjs-titlegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"キー入力が下手なのでバックスペースを連打しがちなのですがバックスペースキーはキーボード上では遥か右上にあります。これが原因で右手首を痛めたことも。入力精度を上げろという話なのですが出来るならもうしてます。","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":103,"offset":103},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":103,"offset":103},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"また、以外と日本語入力をしていると使いがちな「ー」伸ばし棒も近くに欲しいものです。 ","position":{"start":{"line":4,"column":1,"offset":105},"end":{"line":4,"column":43,"offset":147},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":105},"end":{"line":4,"column":43,"offset":147},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"今回は","position":{"start":{"line":6,"column":1,"offset":149},"end":{"line":6,"column":4,"offset":152},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-j</code>","position":{"start":{"line":6,"column":4,"offset":152},"end":{"line":6,"column":9,"offset":157},"indent":[]}},{"type":"text","value":"にbackspace・","position":{"start":{"line":6,"column":9,"offset":157},"end":{"line":6,"column":20,"offset":168},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-n</code>","position":{"start":{"line":6,"column":20,"offset":168},"end":{"line":6,"column":25,"offset":173},"indent":[]}},{"type":"text","value":"にハイフンを割り当てます。","position":{"start":{"line":6,"column":25,"offset":173},"end":{"line":6,"column":38,"offset":186},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":149},"end":{"line":6,"column":38,"offset":186},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ctrlキー","position":{"start":{"line":8,"column":4,"offset":191},"end":{"line":8,"column":10,"offset":197},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":188},"end":{"line":8,"column":10,"offset":197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ctrlキー含め装飾キーには様々なキーバインドが割り当てられています。一般的には","position":{"start":{"line":10,"column":1,"offset":199},"end":{"line":10,"column":41,"offset":239},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-j</code>","position":{"start":{"line":10,"column":41,"offset":239},"end":{"line":10,"column":46,"offset":244},"indent":[]}},{"type":"text","value":"にはreturn・","position":{"start":{"line":10,"column":46,"offset":244},"end":{"line":10,"column":55,"offset":253},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-h</code>","position":{"start":{"line":10,"column":55,"offset":253},"end":{"line":10,"column":60,"offset":258},"indent":[]}},{"type":"text","value":"にはbackspaceなど色々あります。zsh/bashなどのshellやターミナルのキーバインドに設定されていることが多いです。macでは","position":{"start":{"line":10,"column":60,"offset":258},"end":{"line":10,"column":130,"offset":328},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-k</code>","position":{"start":{"line":10,"column":130,"offset":328},"end":{"line":10,"column":135,"offset":333},"indent":[]}},{"type":"text","value":"に行末まで削除があったりと気が利いています。","position":{"start":{"line":10,"column":135,"offset":333},"end":{"line":10,"column":157,"offset":355},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":199},"end":{"line":10,"column":157,"offset":355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"qmk firmwareではraise/lower等のキーマップを変更・追加してカスタマイズするのが一般的ですがこの場合は複合キーを入力するマクロを全てのキーにおいて定義する必要があり厄介です。","position":{"start":{"line":12,"column":1,"offset":357},"end":{"line":12,"column":98,"offset":454},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":357},"end":{"line":12,"column":98,"offset":454},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"今回はレイヤーの定義ではなくプログラムっぽく？キー入力を拡張してみます。","position":{"start":{"line":14,"column":1,"offset":456},"end":{"line":14,"column":37,"offset":492},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":456},"end":{"line":14,"column":37,"offset":492},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"キータイプ","position":{"start":{"line":16,"column":4,"offset":497},"end":{"line":16,"column":9,"offset":502},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":494},"end":{"line":16,"column":9,"offset":502},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"qmk firmwareにてキー入力を拡張するには","position":{"start":{"line":18,"column":1,"offset":504},"end":{"line":18,"column":26,"offset":529},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">process_record_user()</code>","position":{"start":{"line":18,"column":26,"offset":529},"end":{"line":18,"column":49,"offset":552},"indent":[]}},{"type":"text","value":"を用いる方法があります。","position":{"start":{"line":18,"column":49,"offset":552},"end":{"line":18,"column":61,"offset":564},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":504},"end":{"line":18,"column":61,"offset":564},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.qmk.fm/#/custom_quantum_functions?id=programming-the-behavior-of-any-keycode","children":[{"type":"text","value":"公式ドキュメント","position":{"start":{"line":20,"column":2,"offset":567},"end":{"line":20,"column":10,"offset":575},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":566},"end":{"line":20,"column":103,"offset":668},"indent":[]}},{"type":"text","value":"に詳しくはありますが、","position":{"start":{"line":20,"column":103,"offset":668},"end":{"line":20,"column":114,"offset":679},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">process_record_user()</code>","position":{"start":{"line":20,"column":114,"offset":679},"end":{"line":20,"column":137,"offset":702},"indent":[]}},{"type":"text","value":"はqmk firmwareがキー入力を検知しPCへキー情報を送信する前に毎回呼び出される関数です。通常時返り値を","position":{"start":{"line":20,"column":137,"offset":702},"end":{"line":20,"column":193,"offset":758},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":20,"column":193,"offset":758},"end":{"line":20,"column":199,"offset":764},"indent":[]}},{"type":"text","value":"とすることで現在のレイヤーのkeymapを見てPCへキー情報を送信してくれます。今回のように何か特別でキーマップは関与しない処理を行う場合は一通りの処理が終わった後","position":{"start":{"line":20,"column":199,"offset":764},"end":{"line":20,"column":281,"offset":846},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">false</code>","position":{"start":{"line":20,"column":281,"offset":846},"end":{"line":20,"column":288,"offset":853},"indent":[]}},{"type":"text","value":"を返しておきます。この場合は","position":{"start":{"line":20,"column":288,"offset":853},"end":{"line":20,"column":302,"offset":867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">process_record_user</code>","position":{"start":{"line":20,"column":302,"offset":867},"end":{"line":20,"column":323,"offset":888},"indent":[]}},{"type":"text","value":"を抜けた時点で処理を終了するようになります。","position":{"start":{"line":20,"column":323,"offset":888},"end":{"line":20,"column":345,"offset":910},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":566},"end":{"line":20,"column":345,"offset":910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"今回は","position":{"start":{"line":22,"column":1,"offset":912},"end":{"line":22,"column":4,"offset":915},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-j</code>","position":{"start":{"line":22,"column":4,"offset":915},"end":{"line":22,"column":9,"offset":920},"indent":[]}},{"type":"text","value":"と","position":{"start":{"line":22,"column":9,"offset":920},"end":{"line":22,"column":10,"offset":921},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-n</code>","position":{"start":{"line":22,"column":10,"offset":921},"end":{"line":22,"column":15,"offset":926},"indent":[]}},{"type":"text","value":"の時に任意の処理をし、それ以外はキーマップに従うようにしていきます。","position":{"start":{"line":22,"column":15,"offset":926},"end":{"line":22,"column":49,"offset":960},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":912},"end":{"line":22,"column":49,"offset":960},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"この関数はキーの押下時に加えて”押上”時にも呼び出されます。ctrlとの複合キーであることを判定するにはctrlキー押下時にctrl_pressedという押下フラグを立てておく方法をとります。","position":{"start":{"line":24,"column":1,"offset":962},"end":{"line":24,"column":97,"offset":1058},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":962},"end":{"line":24,"column":97,"offset":1058},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"そしてポイントなのがキーの反復機能です。テキストエディタでAキーを押しっぱなしにすると","position":{"start":{"line":26,"column":1,"offset":1060},"end":{"line":26,"column":44,"offset":1103},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">AAAAAAAAAAAAAA</code>","position":{"start":{"line":26,"column":44,"offset":1103},"end":{"line":26,"column":60,"offset":1119},"indent":[]}},{"type":"text","value":"のようにAが大量に入力されます。それはそう。反復機能が働いている時にキーボードが","position":{"start":{"line":26,"column":60,"offset":1119},"end":{"line":26,"column":100,"offset":1159},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">KC_A</code>","position":{"start":{"line":26,"column":100,"offset":1159},"end":{"line":26,"column":106,"offset":1165},"indent":[]}},{"type":"text","value":"のkey","position":{"start":{"line":26,"column":106,"offset":1165},"end":{"line":26,"column":110,"offset":1169},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":26,"column":110,"offset":1169},"end":{"line":26,"column":112,"offset":1171},"indent":[]}},{"type":"text","value":"downコードを連続して送信しているわけではなく、PC側でkey","position":{"start":{"line":26,"column":112,"offset":1171},"end":{"line":26,"column":144,"offset":1203},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":26,"column":144,"offset":1203},"end":{"line":26,"column":146,"offset":1205},"indent":[]}},{"type":"text","value":"downコードが来てからなかなかkey","position":{"start":{"line":26,"column":146,"offset":1205},"end":{"line":26,"column":165,"offset":1224},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":26,"column":165,"offset":1224},"end":{"line":26,"column":167,"offset":1226},"indent":[]}},{"type":"text","value":"upコードが来ないので押しっぱなしであると判断しています。","position":{"start":{"line":26,"column":167,"offset":1226},"end":{"line":26,"column":196,"offset":1255},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1060},"end":{"line":26,"column":196,"offset":1255},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"qmk firmwareにはキーコードを送信するための関数がいくか用意されていますがよく使うのは","position":{"start":{"line":28,"column":1,"offset":1257},"end":{"line":28,"column":49,"offset":1305},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">tap_code(KEYCODE)</code>","position":{"start":{"line":28,"column":49,"offset":1305},"end":{"line":28,"column":68,"offset":1324},"indent":[]}},{"type":"text","value":"と","position":{"start":{"line":28,"column":68,"offset":1324},"end":{"line":28,"column":69,"offset":1325},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">register_code(KEYCODE) / unregister_code(KEYCODE)</code>","position":{"start":{"line":28,"column":69,"offset":1325},"end":{"line":28,"column":120,"offset":1376},"indent":[]}},{"type":"text","value":"です。前者はkey","position":{"start":{"line":28,"column":120,"offset":1376},"end":{"line":28,"column":129,"offset":1385},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":28,"column":129,"offset":1385},"end":{"line":28,"column":131,"offset":1387},"indent":[]}},{"type":"text","value":"downコードとkey","position":{"start":{"line":28,"column":131,"offset":1387},"end":{"line":28,"column":142,"offset":1398},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":28,"column":142,"offset":1398},"end":{"line":28,"column":144,"offset":1400},"indent":[]}},{"type":"text","value":"upコードを連続して送信し、後者はresigerがdown・unregisterがupのコードを送信するものです。用途に合わせて使い分ける必要があります。","position":{"start":{"line":28,"column":144,"offset":1400},"end":{"line":28,"column":221,"offset":1477},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1257},"end":{"line":28,"column":221,"offset":1477},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"実装","position":{"start":{"line":30,"column":4,"offset":1482},"end":{"line":30,"column":6,"offset":1484},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1479},"end":{"line":30,"column":6,"offset":1484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"defaultのkeymap.cの下の方に","position":{"start":{"line":32,"column":1,"offset":1486},"end":{"line":32,"column":22,"offset":1507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">process_record_user()</code>","position":{"start":{"line":32,"column":22,"offset":1507},"end":{"line":32,"column":45,"offset":1530},"indent":[]}},{"type":"text","value":"の記述があります。ここに実装していきます。","position":{"start":{"line":32,"column":45,"offset":1530},"end":{"line":32,"column":66,"offset":1551},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1486},"end":{"line":32,"column":66,"offset":1551},"indent":[]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymaps.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>略<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n\n<span class=\"token keyword\">static</span> bool ctrl_pressed <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> bool exceptionaly_ctrl_layer_pressed <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n\nbool <span class=\"token function\">process_record_user</span><span class=\"token punctuation\">(</span>uint16_t keycode<span class=\"token punctuation\">,</span> keyrecord_t <span class=\"token operator\">*</span>record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">SSD1306OLED</span></span>\n        <span class=\"token function\">set_keylog</span><span class=\"token punctuation\">(</span>keycode<span class=\"token punctuation\">,</span> record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n        <span class=\"token comment\">// set_timelog();</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>keycode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> KC_LCTRL<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ctrl_pressed <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            ctrl_pressed <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> QWERTY<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">set_single_persistent_default_layer</span><span class=\"token punctuation\">(</span>_QWERTY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>略<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span></code></pre></div>","position":{"start":{"line":34,"column":1,"offset":1553},"end":{"line":65,"column":4,"offset":2310},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上のコードで、引数keycodeに押下/押上されたキーのコードが入っています。","position":{"start":{"line":67,"column":1,"offset":2312},"end":{"line":67,"column":40,"offset":2351},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">record-&gt;event.pressed</code>","position":{"start":{"line":67,"column":40,"offset":2351},"end":{"line":67,"column":63,"offset":2374},"indent":[]}},{"type":"text","value":"にて押下か押上か判断できるのでctrlキーの状態に変化があればフラグを更新します。ここではreturnせずに正常処理をします。","position":{"start":{"line":67,"column":63,"offset":2374},"end":{"line":67,"column":126,"offset":2437},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2312},"end":{"line":67,"column":126,"offset":2437},"indent":[]}},{"type":"html","value":"\n        <div class=\"gatsby-code-title code-title\">\n          <span>keymap.c</span>\n        </div>\n       "},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>略<span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span>\n\n    <span class=\"token keyword\">case</span> ADJUST<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">layer_on</span><span class=\"token punctuation\">(</span>_ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">layer_off</span><span class=\"token punctuation\">(</span>_ADJUST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ctrl_pressed <span class=\"token operator\">||</span> exceptionaly_ctrl_layer_pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>keycode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> KC_J<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">unregister_code</span><span class=\"token punctuation\">(</span>KC_LCTRL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">register_code</span><span class=\"token punctuation\">(</span>KC_BSPACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    exceptionaly_ctrl_layer_pressed <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">unregister_code</span><span class=\"token punctuation\">(</span>KC_BSPACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ctrl_pressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token function\">register_code</span><span class=\"token punctuation\">(</span>KC_LCTRL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n                    exceptionaly_ctrl_layer_pressed <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">case</span> KC_N<span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token operator\">-></span>event<span class=\"token punctuation\">.</span>pressed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">unregister_code</span><span class=\"token punctuation\">(</span>KC_LCTRL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">register_code</span><span class=\"token punctuation\">(</span>KC_MINUS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    exceptionaly_ctrl_layer_pressed <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">unregister_code</span><span class=\"token punctuation\">(</span>KC_MINUS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ctrl_pressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token function\">register_code</span><span class=\"token punctuation\">(</span>KC_LTRL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n                    exceptionaly_ctrl_layer_pressed <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":69,"column":1,"offset":2439},"end":{"line":119,"column":4,"offset":3824},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上のコードで、switchにてctrlキーとレイヤ切り替えキーを判定し、それ以外はdefaultに入ります。ここで","position":{"start":{"line":120,"column":1,"offset":3825},"end":{"line":120,"column":58,"offset":3882},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ctrl\\_pressed</code>","position":{"start":{"line":120,"column":58,"offset":3882},"end":{"line":120,"column":73,"offset":3897},"indent":[]}},{"type":"text","value":"フラグを用いて押下中(修飾キー)であるかを判定し、任意のキーとの組み合わせ(ここでは","position":{"start":{"line":120,"column":73,"offset":3897},"end":{"line":120,"column":115,"offset":3939},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-J</code>","position":{"start":{"line":120,"column":115,"offset":3939},"end":{"line":120,"column":120,"offset":3944},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":120,"column":120,"offset":3944},"end":{"line":120,"column":121,"offset":3945},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">C-N</code>","position":{"start":{"line":120,"column":121,"offset":3945},"end":{"line":120,"column":126,"offset":3950},"indent":[]}},{"type":"text","value":")であれば","position":{"start":{"line":120,"column":126,"offset":3950},"end":{"line":120,"column":131,"offset":3955},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">register\\_code(KEYCODE)</code>","position":{"start":{"line":120,"column":131,"offset":3955},"end":{"line":120,"column":156,"offset":3980},"indent":[]}},{"type":"text","value":"にてキーを打ちます。","position":{"start":{"line":120,"column":156,"offset":3980},"end":{"line":120,"column":166,"offset":3990},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3825},"end":{"line":120,"column":166,"offset":3990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"今回のようにbackspaceやハイフンといった本来修飾キーを用いないキー(Ctrlとの複合キーではないキー)の場合はPCにこれは修飾キーでないことを伝えるために","position":{"start":{"line":122,"column":1,"offset":3992},"end":{"line":122,"column":82,"offset":4073},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unregister_code(KC_LCTRL)</code>","position":{"start":{"line":122,"column":82,"offset":4073},"end":{"line":122,"column":109,"offset":4100},"indent":[]}},{"type":"text","value":"にてctrlキーをを仮想的に押上しておきます。","position":{"start":{"line":122,"column":109,"offset":4100},"end":{"line":122,"column":132,"offset":4123},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3992},"end":{"line":122,"column":132,"offset":4123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ここでは長押ししたら複数文字backspace/ハイフンを入力して欲しいので","position":{"start":{"line":124,"column":1,"offset":4125},"end":{"line":124,"column":39,"offset":4163},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">register</code>","position":{"start":{"line":124,"column":39,"offset":4163},"end":{"line":124,"column":49,"offset":4173},"indent":[]}},{"type":"text","value":"を利用しています。","position":{"start":{"line":124,"column":49,"offset":4173},"end":{"line":124,"column":58,"offset":4182},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4125},"end":{"line":124,"column":58,"offset":4182},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"そして押上時に","position":{"start":{"line":126,"column":1,"offset":4184},"end":{"line":126,"column":8,"offset":4191},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unregister</code>","position":{"start":{"line":126,"column":8,"offset":4191},"end":{"line":126,"column":20,"offset":4203},"indent":[]}},{"type":"text","value":"して","position":{"start":{"line":126,"column":20,"offset":4203},"end":{"line":126,"column":22,"offset":4205},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">register_code(KC_LCTRL)</code>","position":{"start":{"line":126,"column":22,"offset":4205},"end":{"line":126,"column":47,"offset":4230},"indent":[]}},{"type":"text","value":"にて仮想的なctrlキーの押下を戻しておくといいです。backspaceで数文字消した後貼り付けしたい時にctrlキーを押しなおす必要がなくなり、より自然になるかと。","position":{"start":{"line":126,"column":47,"offset":4230},"end":{"line":126,"column":130,"offset":4313},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4184},"end":{"line":126,"column":130,"offset":4313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"入力時に","position":{"start":{"line":128,"column":1,"offset":4315},"end":{"line":128,"column":5,"offset":4319},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Ctrl(down) -&gt; J(down) -&gt; J(up) -&gt; Ctrl(up)</code>","position":{"start":{"line":128,"column":5,"offset":4319},"end":{"line":128,"column":49,"offset":4363},"indent":[]}},{"type":"text","value":"とタイプしているつもりでも指が離れるタイミングによってはupのタイミングが逆になることもあり得るのでフラグで状態管理をして","position":{"start":{"line":128,"column":49,"offset":4363},"end":{"line":128,"column":110,"offset":4424},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if(ctrl_pressed || exceptionaly_ctrl_layer_pressed)</code>","position":{"start":{"line":128,"column":110,"offset":4424},"end":{"line":128,"column":163,"offset":4477},"indent":[]}},{"type":"text","value":"のようにどちらのフラグでも対応できると安心。","position":{"start":{"line":128,"column":163,"offset":4477},"end":{"line":128,"column":185,"offset":4499},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4315},"end":{"line":128,"column":185,"offset":4499},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"おわり","position":{"start":{"line":130,"column":4,"offset":4504},"end":{"line":130,"column":7,"offset":4507},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4501},"end":{"line":130,"column":7,"offset":4507},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"キーマップのカスタマイズは既成のキーボードでも十分できますが、自作キーボードでは大抵のことを作ればできるので楽しい。","position":{"start":{"line":132,"column":1,"offset":4509},"end":{"line":132,"column":59,"offset":4567},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4509},"end":{"line":132,"column":59,"offset":4567},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"リンク","position":{"start":{"line":134,"column":4,"offset":4572},"end":{"line":134,"column":7,"offset":4575},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4569},"end":{"line":134,"column":7,"offset":4575},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://support.apple.com/ja-jp/HT201236","children":[{"type":"text","value":"Mac のキーボードショートカット - Apple サポート","position":{"start":{"line":135,"column":4,"offset":4579},"end":{"line":135,"column":34,"offset":4609},"indent":[]}}],"position":{"start":{"line":135,"column":3,"offset":4578},"end":{"line":135,"column":77,"offset":4652},"indent":[]}}],"position":{"start":{"line":135,"column":3,"offset":4578},"end":{"line":135,"column":77,"offset":4652},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4576},"end":{"line":135,"column":77,"offset":4652},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/qmk/qmk_firmware/blob/master/keyboards/lily58/keymaps/default/keymap.c","children":[{"type":"text","value":"qmk","position":{"start":{"line":136,"column":4,"offset":4656},"end":{"line":136,"column":7,"offset":4659},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"firmware/keymap.c at master · qmk/qmk","position":{"start":{"line":136,"column":8,"offset":4660},"end":{"line":136,"column":45,"offset":4697},"indent":[]}}],"position":{"start":{"line":136,"column":7,"offset":4659},"end":{"line":136,"column":46,"offset":4698},"indent":[]}},{"type":"text","value":"firmware","position":{"start":{"line":136,"column":46,"offset":4698},"end":{"line":136,"column":54,"offset":4706},"indent":[]}}],"position":{"start":{"line":136,"column":3,"offset":4655},"end":{"line":136,"column":147,"offset":4799},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":136,"column":147,"offset":4799},"end":{"line":136,"column":148,"offset":4800},"indent":[]}}],"position":{"start":{"line":136,"column":3,"offset":4655},"end":{"line":136,"column":148,"offset":4800},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4653},"end":{"line":136,"column":148,"offset":4800},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/magcho/qmk_firmware/blob/master/keyboards/lily58/keymaps/magcho/keymap.c","children":[{"type":"text","value":"qmk firmware/keymap.c at master · magcho/qmk firmware","position":{"start":{"line":137,"column":4,"offset":4804},"end":{"line":137,"column":57,"offset":4857},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":4803},"end":{"line":137,"column":151,"offset":4951},"indent":[]}}],"position":{"start":{"line":137,"column":3,"offset":4803},"end":{"line":137,"column":151,"offset":4951},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4801},"end":{"line":137,"column":151,"offset":4951},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.qmk.fm/#/custom_quantum_functions?id=programming-the-behavior-of-any-keycode","children":[{"type":"text","value":"Customizing Functionality - QMK Firmware","position":{"start":{"line":138,"column":4,"offset":4955},"end":{"line":138,"column":44,"offset":4995},"indent":[]}}],"position":{"start":{"line":138,"column":3,"offset":4954},"end":{"line":138,"column":137,"offset":5088},"indent":[]}}],"position":{"start":{"line":138,"column":3,"offset":4954},"end":{"line":138,"column":137,"offset":5088},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4952},"end":{"line":138,"column":137,"offset":5088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://docs.qmk.fm/#/keycodes","children":[{"type":"text","value":"Full List - QMK Firmware","position":{"start":{"line":139,"column":4,"offset":5092},"end":{"line":139,"column":28,"offset":5116},"indent":[]}}],"position":{"start":{"line":139,"column":3,"offset":5091},"end":{"line":139,"column":62,"offset":5150},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":139,"column":62,"offset":5150},"end":{"line":139,"column":63,"offset":5151},"indent":[]}}],"position":{"start":{"line":139,"column":3,"offset":5091},"end":{"line":139,"column":63,"offset":5151},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5089},"end":{"line":139,"column":63,"offset":5151},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4576},"end":{"line":139,"column":63,"offset":5151},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":140,"column":1,"offset":5152}}}}