{"expireTime":9007200859665841000,"key":"transformer-remark-markdown-html-b9484bd8497f905fe93d47c607775b31-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjs-titlegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-prismjs-","val":"<h2>内容</h2>\n<p>DockerHub の公式の PHP イメージを使っていて、mod_rewite したい人向けのお話です。結論だけ知りたい人は読み飛ばしてね。</p>\n<h2>事の発端</h2>\n<p>僕自身が立ち上げた web サービスではもともと URL が<code class=\"language-text\">http://example.com/index.php?cmd=view&amp;page=123</code>という感じでとてもダサかったので、かっこよくしたかった。WordPress などではパーマリンクと呼ばれ URL がイカした感じになっているので、僕も方法をパクった。\n調べると apache 側の設定で mod_rewrite を使うとアクセス時に URL を記述したルールに基づいて置換してくれるらしい。</p>\n<p>僕の web サービスではアクセスを全て index.php で受け、get パラメータで動作を変化させている、pukiwiki とか？の設計をパクったはず。動作ルールは以下</p>\n<p><code class=\"language-text\">example.com/index.php?cmd=[動作モード]&amp;page=[記事のNo.]</code></p>\n<ul>\n<li>\n<p>cmd</p>\n<ul>\n<li>view 記事の表示、page で記事を指定</li>\n<li>edit 記事の編集、page で記事を指定</li>\n<li>category カテゴリーごとに記事一覧を表示する　　などなど</li>\n</ul>\n</li>\n</ul>\n<p>これを<code class=\"language-text\">example.com/[動作モード]/[記事のNo.]</code>にしたかった。\nさらに view の時には<code class=\"language-text\">example.com/[記事のNo.]</code>にしたい。</p>\n<p>このルールで URL を置換させるには.htaccess に</p>\n\n        <div class=\"gatsby-code-title code-title\">\n          <span>.htaccess</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RewriteEngine On\nRewriteBase /\nRewriteRule ^([0-9]+) index.php?cmd=view&amp;page=$1 [L]\nRewriteRule ^edit/([0-9]+) index.php?cmd=edit&amp;page=$1 [L]\nRewriteRule ^edit index.php?cmd=edit [L]\nRewriteRule ^category index.php?cmd=category [L]</code></pre></div>\n<p>のように記述する、よくある正規表現と似ているので特に迷うことはないだろう。</p>\n<p>いざ、Docker で立てた開発環境に置いてみると、500 エラー。なんで！！\nしばらく悩むも解決せず、諦めて本番環境に置いてみると動いた！なんで！！</p>\n<p>理由は単純だった、使っているシステムが違った。どちらも apache なのは違いないが、本番は CentOS で構成されており、開発環境の Docker の公式 image の php は debian で構成されていた。</p>\n<p><a href=\"https://github.com/docker-library/php/blob/2630167f7e69394bdd91f240443a0a521fd7872d/7.0/apache/Dockerfile\">Dockerfile</a></p>\n<p>debian 系の apache で mod_rewrite を有効化するにはコンテナに入ってコマンドを打てばいいらしい。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker exec -it {php_container_name} bash\n$ a2enmod rewrite</code></pre></div>\n<p>そして/etc/apache2/sites-available/000-default.conf の&#x3C;VirtualHost *:80>の中に</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    &lt;Directory /var/www/html&gt;\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;</code></pre></div>\n<p>を追加して再起動すれば OK!</p>\n<p>でも、せっかく docker-compose 使ってるからいちいちコマンド打つの面倒だよね。ってことで</p>\n<h2>結論</h2>\n<p><strong>Dockerfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FROM php:7.0-apache\nRUN  a2enmod rewrite</code></pre></div>\n<p><strong>docker-compse.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">php-7.0</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'80:80'</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'../:/var/www/html'</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token string\">'./000-default.conf:/etc/apache2/sites-available/000-default.conf'</span></code></pre></div>\n<p><strong>000-default.conf</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;VirtualHost *:80&gt;\n    &lt;Directory /var/www/html&gt;\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;\n~~~~~~~~~~~~~~以下略~~~~~~~~~~~~~~~~</code></pre></div>\n<p>この３ファイルを同じディレクトリに入れ<code class=\"language-text\">docker-compose build</code>なりでイメージをリビルドして<code class=\"language-text\">docker-compose up</code>でOK。</p>\n<p>ちなみに、mysql も使いたいよって人は</p>\n<p><strong>Dockerfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FROM php:7.0-apache\nRUN apt-get update &amp;&amp; \\\n  docker-php-ext-install pdo_mysql mysqli mbstring &amp;&amp; \\\n  a2enmod rewrite</code></pre></div>\n<p>こうすれば良いです。</p>"}